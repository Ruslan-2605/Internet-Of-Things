[{"F:\\smart-house\\src\\index.js":"1","F:\\smart-house\\src\\App.js":"2","F:\\smart-house\\src\\redux\\store.js":"3","F:\\smart-house\\src\\components\\Header\\Header.jsx":"4","F:\\smart-house\\src\\components\\Navbar\\Navbar.jsx":"5","F:\\smart-house\\src\\components\\Login\\SignUp.jsx":"6","F:\\smart-house\\src\\components\\Login\\SignIn.jsx":"7","F:\\smart-house\\src\\HOC\\withAuthRedirect.jsx":"8","F:\\smart-house\\src\\components\\Content\\Dashboard\\Dashboard.jsx":"9","F:\\smart-house\\src\\components\\Content\\Dashboard\\DashboardItem.jsx":"10","F:\\smart-house\\src\\DAL\\authAPI.js":"11","F:\\smart-house\\src\\components\\Content\\Dashboard\\Forms\\CreateProjectForm.jsx":"12","F:\\smart-house\\src\\components\\Content\\Dashboard\\Forms\\UpdateProjectForm.jsx":"13","F:\\smart-house\\src\\components\\Content\\Project\\Project.jsx":"14","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Device.jsx":"15","F:\\smart-house\\src\\DAL\\thingsAPI.js":"16","F:\\smart-house\\src\\components\\Charts\\Сhart.jsx":"17","F:\\smart-house\\src\\components\\Charts\\useData.js":"18","F:\\smart-house\\src\\components\\Charts\\Marks.jsx":"19","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Modals\\CreateDeviceModal.jsx":"20","F:\\smart-house\\src\\components\\Content\\Project\\Sensor\\Forms\\CreateSensorForm.jsx":"21","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Forms\\CreateDeviceForm.jsx":"22","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Forms\\UpdateDeviceForm.jsx":"23","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Modals\\DeviceModal.jsx":"24","F:\\smart-house\\src\\components\\Content\\Project\\Sensor\\Sensor.jsx":"25","F:\\smart-house\\src\\redux\\Authtorization\\reducer\\auth-reducer.js":"26","F:\\smart-house\\src\\redux\\Things\\reducer\\things-reducer.js":"27","F:\\smart-house\\src\\redux\\Dashboard\\reducer\\dashboard-reducer.js":"28","F:\\smart-house\\src\\redux\\Errors\\reducer\\errors-reducer.js":"29","F:\\smart-house\\src\\redux\\Authtorization\\actions\\setCookie.js":"30","F:\\smart-house\\src\\redux\\Authtorization\\actions\\logout.js":"31","F:\\smart-house\\src\\redux\\Authtorization\\selectors\\authSelector.js":"32","F:\\smart-house\\src\\redux\\Dashboard\\selectors\\dashboardSelector.js":"33","F:\\smart-house\\src\\redux\\Errors\\actions\\deleteError.js":"34","F:\\smart-house\\src\\redux\\Dashboard\\actions\\setProjectsPage.js":"35","F:\\smart-house\\src\\redux\\Dashboard\\actions\\setIcon.js":"36","F:\\smart-house\\src\\redux\\Errors\\selectors\\errorsSelector.js":"37","F:\\smart-house\\src\\redux\\Things\\actions\\setThingsPage.js":"38","F:\\smart-house\\src\\redux\\Things\\thunks\\getThingsPagination.js":"39","F:\\smart-house\\src\\redux\\Things\\thunks\\getThingsPage.js":"40","F:\\smart-house\\src\\redux\\Dashboard\\thunks\\deleteProject.js":"41","F:\\smart-house\\src\\redux\\Dashboard\\thunks\\getProject.js":"42","F:\\smart-house\\src\\redux\\Dashboard\\thunks\\getProjectsPagination.js":"43","F:\\smart-house\\src\\redux\\Dashboard\\thunks\\getProjectsPage.js":"44","F:\\smart-house\\src\\redux\\Things\\selectors\\thingsSelector.js":"45","F:\\smart-house\\src\\redux\\Dashboard\\actions\\setInitialProjectViewed.js":"46","F:\\smart-house\\src\\redux\\Authtorization\\actions\\setAuthUserData.js":"47","F:\\smart-house\\src\\redux\\Dashboard\\actions\\setViewedProject.js":"48","F:\\smart-house\\src\\redux\\Dashboard\\actions\\setProjects.js":"49","F:\\smart-house\\src\\redux\\Things\\actions\\setThings.js":"50","F:\\smart-house\\src\\redux\\Errors\\actions\\setError.js":"51","F:\\smart-house\\src\\redux\\Authtorization\\thunks\\signUp.js":"52","F:\\smart-house\\src\\redux\\Authtorization\\thunks\\signIn.js":"53","F:\\smart-house\\src\\redux\\Dashboard\\thunks\\updateProject.js":"54","F:\\smart-house\\src\\redux\\Dashboard\\actions\\updateProject.js":"55","F:\\smart-house\\src\\redux\\Things\\actions\\setInitialState.js":"56","F:\\smart-house\\src\\redux\\Things\\actions\\setThingsPagination.js":"57","F:\\smart-house\\src\\redux\\Dashboard\\thunks\\createProject.js":"58","F:\\smart-house\\src\\redux\\Dashboard\\actions\\createProject.js":"59","F:\\smart-house\\src\\redux\\Dashboard\\actions\\setProjectsPagination.js":"60","F:\\smart-house\\src\\redux\\Things\\thunks\\createSensor.js":"61","F:\\smart-house\\src\\redux\\Things\\thunks\\deleteDevice.js":"62","F:\\smart-house\\src\\redux\\Things\\thunks\\setDeviceState.js":"63","F:\\smart-house\\src\\redux\\Things\\thunks\\createDevice.js":"64","F:\\smart-house\\src\\redux\\Things\\actions\\createSensor.js":"65","F:\\smart-house\\src\\redux\\Things\\actions\\setDeviceState.js":"66","F:\\smart-house\\src\\redux\\Things\\thunks\\updateDevice.js":"67","F:\\smart-house\\src\\redux\\Things\\actions\\createDevice.js":"68","F:\\smart-house\\src\\redux\\Things\\actions\\updateDevice.js":"69","F:\\smart-house\\src\\redux\\Things\\thunks\\updateSensor.js":"70","F:\\smart-house\\src\\redux\\Things\\actions\\updateSensor.js":"71","F:\\smart-house\\src\\redux\\Things\\thunks\\deleteSensor.js":"72","F:\\smart-house\\src\\DAL\\dashboardAPI.js":"73","F:\\smart-house\\src\\utils\\component-helpers\\isAuthSetCookie.js":"74","F:\\smart-house\\src\\utils\\component-helpers\\ErrorsModal.jsx":"75","F:\\smart-house\\src\\utils\\component-helpers\\Modal.jsx":"76","F:\\smart-house\\src\\utils\\component-helpers\\Pagination.jsx":"77","F:\\smart-house\\src\\utils\\form-helpers\\SetErrorForm.js":"78","F:\\smart-house\\src\\utils\\form-helpers\\FormСontrollers.jsx":"79","F:\\smart-house\\src\\utils\\component-helpers\\getTextIsCopied.js":"80","F:\\smart-house\\src\\utils\\form-helpers\\deviceStateValidation.js":"81","F:\\smart-house\\src\\utils\\component-helpers\\LastActive.jsx":"82","F:\\smart-house\\src\\utils\\component-helpers\\getLastActive.js":"83","F:\\smart-house\\src\\utils\\redux-helpers\\setErrors.js":"84","F:\\smart-house\\src\\utils\\redux-helpers\\createThing.js":"85","F:\\smart-house\\src\\utils\\redux-helpers\\updateThing.js":"86","F:\\smart-house\\src\\utils\\redux-helpers\\updateObjectArray.js":"87","F:\\smart-house\\src\\utils\\DAL-helpers\\instance.js":"88","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Modals\\DeviceEditModeModal.jsx":"89","F:\\smart-house\\src\\hooks\\useFluxForm.js":"90","F:\\smart-house\\src\\utils\\form-helpers\\ErrorsForm.jsx":"91"},{"size":394,"mtime":1614600824416,"results":"92","hashOfConfig":"93"},{"size":1316,"mtime":1617388930237,"results":"94","hashOfConfig":"93"},{"size":839,"mtime":1617193992122,"results":"95","hashOfConfig":"93"},{"size":2236,"mtime":1617302292707,"results":"96","hashOfConfig":"93"},{"size":2795,"mtime":1617270820746,"results":"97","hashOfConfig":"93"},{"size":2729,"mtime":1617299407990,"results":"98","hashOfConfig":"93"},{"size":2435,"mtime":1617299031295,"results":"99","hashOfConfig":"93"},{"size":571,"mtime":1617272097526,"results":"100","hashOfConfig":"93"},{"size":3041,"mtime":1617385158639,"results":"101","hashOfConfig":"93"},{"size":639,"mtime":1617270532798,"results":"102","hashOfConfig":"93"},{"size":848,"mtime":1617388817027,"results":"103","hashOfConfig":"93"},{"size":2616,"mtime":1617391050544,"results":"104","hashOfConfig":"93"},{"size":2343,"mtime":1617390683266,"results":"105","hashOfConfig":"93"},{"size":5822,"mtime":1617387222074,"results":"106","hashOfConfig":"93"},{"size":1796,"mtime":1617387164441,"results":"107","hashOfConfig":"93"},{"size":2256,"mtime":1617390409133,"results":"108","hashOfConfig":"93"},{"size":2855,"mtime":1617177027316,"results":"109","hashOfConfig":"93"},{"size":949,"mtime":1617199386050,"results":"110","hashOfConfig":"93"},{"size":1328,"mtime":1617179443598,"results":"111","hashOfConfig":"93"},{"size":3179,"mtime":1617274963796,"results":"112","hashOfConfig":"93"},{"size":2518,"mtime":1617390736955,"results":"113","hashOfConfig":"93"},{"size":4206,"mtime":1617390654454,"results":"114","hashOfConfig":"93"},{"size":3516,"mtime":1617365290197,"results":"115","hashOfConfig":"93"},{"size":5310,"mtime":1617387024048,"results":"116","hashOfConfig":"93"},{"size":1315,"mtime":1617271707047,"results":"117","hashOfConfig":"93"},{"size":548,"mtime":1617187619281,"results":"118","hashOfConfig":"93"},{"size":2746,"mtime":1617272676410,"results":"119","hashOfConfig":"93"},{"size":2097,"mtime":1617272684605,"results":"120","hashOfConfig":"93"},{"size":815,"mtime":1617190278880,"results":"121","hashOfConfig":"93"},{"size":198,"mtime":1617206558725,"results":"122","hashOfConfig":"93"},{"size":277,"mtime":1617204257114,"results":"123","hashOfConfig":"93"},{"size":370,"mtime":1617196708048,"results":"124","hashOfConfig":"93"},{"size":618,"mtime":1617206424549,"results":"125","hashOfConfig":"93"},{"size":124,"mtime":1617204820251,"results":"126","hashOfConfig":"93"},{"size":250,"mtime":1617204339087,"results":"127","hashOfConfig":"93"},{"size":250,"mtime":1617204310498,"results":"128","hashOfConfig":"93"},{"size":146,"mtime":1617196740989,"results":"129","hashOfConfig":"93"},{"size":246,"mtime":1617204933267,"results":"130","hashOfConfig":"93"},{"size":540,"mtime":1617272607951,"results":"131","hashOfConfig":"93"},{"size":542,"mtime":1617272592274,"results":"132","hashOfConfig":"93"},{"size":543,"mtime":1617272535155,"results":"133","hashOfConfig":"93"},{"size":515,"mtime":1617272546253,"results":"134","hashOfConfig":"93"},{"size":558,"mtime":1617290245588,"results":"135","hashOfConfig":"93"},{"size":535,"mtime":1617272549043,"results":"136","hashOfConfig":"93"},{"size":320,"mtime":1617387141040,"results":"137","hashOfConfig":"93"},{"size":121,"mtime":1617204314868,"results":"138","hashOfConfig":"93"},{"size":142,"mtime":1617204265880,"results":"139","hashOfConfig":"93"},{"size":136,"mtime":1617206739187,"results":"140","hashOfConfig":"93"},{"size":130,"mtime":1617204324781,"results":"141","hashOfConfig":"93"},{"size":119,"mtime":1617204914233,"results":"142","hashOfConfig":"93"},{"size":224,"mtime":1617204788970,"results":"143","hashOfConfig":"93"},{"size":552,"mtime":1617272525841,"results":"144","hashOfConfig":"93"},{"size":571,"mtime":1617387528713,"results":"145","hashOfConfig":"93"},{"size":685,"mtime":1617272554643,"results":"146","hashOfConfig":"93"},{"size":134,"mtime":1617204351456,"results":"147","hashOfConfig":"93"},{"size":104,"mtime":1617204905002,"results":"148","hashOfConfig":"93"},{"size":136,"mtime":1617205037844,"results":"149","hashOfConfig":"93"},{"size":674,"mtime":1617390763113,"results":"150","hashOfConfig":"93"},{"size":132,"mtime":1617204305891,"results":"151","hashOfConfig":"93"},{"size":140,"mtime":1617204998919,"results":"152","hashOfConfig":"93"},{"size":658,"mtime":1617390801459,"results":"153","hashOfConfig":"93"},{"size":553,"mtime":1617272582961,"results":"154","hashOfConfig":"93"},{"size":668,"mtime":1617272611352,"results":"155","hashOfConfig":"93"},{"size":658,"mtime":1617390777225,"results":"156","hashOfConfig":"93"},{"size":129,"mtime":1617207421519,"results":"157","hashOfConfig":"93"},{"size":159,"mtime":1617207418201,"results":"158","hashOfConfig":"93"},{"size":522,"mtime":1617272614677,"results":"159","hashOfConfig":"93"},{"size":129,"mtime":1617207416557,"results":"160","hashOfConfig":"93"},{"size":125,"mtime":1617207419363,"results":"161","hashOfConfig":"93"},{"size":522,"mtime":1617272618149,"results":"162","hashOfConfig":"93"},{"size":125,"mtime":1617207424279,"results":"163","hashOfConfig":"93"},{"size":553,"mtime":1617272585988,"results":"164","hashOfConfig":"93"},{"size":1509,"mtime":1617389781579,"results":"165","hashOfConfig":"93"},{"size":527,"mtime":1617272741275,"results":"166","hashOfConfig":"93"},{"size":1203,"mtime":1617272856176,"results":"167","hashOfConfig":"93"},{"size":741,"mtime":1617298015107,"results":"168","hashOfConfig":"93"},{"size":2949,"mtime":1617383895505,"results":"169","hashOfConfig":"93"},{"size":204,"mtime":1617270223463,"results":"170","hashOfConfig":"93"},{"size":937,"mtime":1617299339485,"results":"171","hashOfConfig":"93"},{"size":206,"mtime":1617302998055,"results":"172","hashOfConfig":"93"},{"size":1079,"mtime":1617270233795,"results":"173","hashOfConfig":"93"},{"size":344,"mtime":1617271858698,"results":"174","hashOfConfig":"93"},{"size":699,"mtime":1617271856693,"results":"175","hashOfConfig":"93"},{"size":654,"mtime":1617272876108,"results":"176","hashOfConfig":"93"},{"size":263,"mtime":1617270157253,"results":"177","hashOfConfig":"93"},{"size":291,"mtime":1617270162076,"results":"178","hashOfConfig":"93"},{"size":241,"mtime":1617270190096,"results":"179","hashOfConfig":"93"},{"size":114,"mtime":1617271289593,"results":"180","hashOfConfig":"93"},{"size":3692,"mtime":1617295579986,"results":"181","hashOfConfig":"93"},{"size":245,"mtime":1617295231580,"results":"182","hashOfConfig":"93"},{"size":590,"mtime":1617299025995,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"1wu141m",{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"186"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"186"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"186"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"186"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"186"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"186"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"186"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"186"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"186"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"186"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"186"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"186"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"186"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"186"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"F:\\smart-house\\src\\index.js",[],["382","383"],"F:\\smart-house\\src\\App.js",["384"],"import React from 'react';\nimport { getIsAuth } from './redux/Authtorization/selectors/authSelector'\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./App.css\"\nimport { HeaderComponent } from './components/Header/Header';\nimport { NavbarComponent } from './components/Navbar/Navbar';\nimport { Dashboard } from './components/Content/Dashboard/Dashboard';\nimport { Route } from 'react-router-dom';\nimport { Project } from './components/Content/Project/Project';\nimport { isAuthSetCookie } from './utils/component-helpers/isAuthSetCookie';\nimport { Chart } from './components/Charts/Сhart';\nimport { ErrorsModal } from './utils/component-helpers/ErrorsModal';\n\nexport const App = () => {\n  // Устанавливаю куки в стэйт если они присутствуют\n  const dispatch = useDispatch();\n  const isAuth = useSelector(getIsAuth);\n  isAuthSetCookie(isAuth, dispatch);\n\n  return (\n    <div className=\"wrapper\" >\n      <HeaderComponent />\n      <NavbarComponent />\n      <div className=\"wrapper-content\">\n        <Route exact path=\"/dashboard\" render={() => <Dashboard />} />\n        <Route path=\"/dashboard/project/:projectId?\" render={() => <Project />} />\n        {/* <Route path=\"/chart\" render={() => <Chart />} /> */}\n      </div>\n      <ErrorsModal />\n    </div>\n  );\n};\n","F:\\smart-house\\src\\redux\\store.js",[],"F:\\smart-house\\src\\components\\Header\\Header.jsx",[],"F:\\smart-house\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\smart-house\\src\\components\\Login\\SignUp.jsx",[],"F:\\smart-house\\src\\components\\Login\\SignIn.jsx",[],"F:\\smart-house\\src\\HOC\\withAuthRedirect.jsx",[],"F:\\smart-house\\src\\components\\Content\\Dashboard\\Dashboard.jsx",["385","386","387"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../../styles/Dashboard.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserName, getUserToken } from \"../../../redux/Authtorization/selectors/authSelector\";\r\nimport { getProjects, getActiveProjectsPage, getPaginationProjects } from \"../../../redux/Dashboard/selectors/dashboardSelector\";\r\nimport { DashboardItem } from \"./DashboardItem\";\r\nimport { Modal } from \"../../../utils/component-helpers/Modal\"\r\nimport { withAuthRedirect } from \"../../../HOC/withAuthRedirect\";\r\nimport { CreateProjectForm } from \"./Forms/CreateProjectForm\";\r\nimport { Pagination } from \"../../../utils/component-helpers/Pagination\";\r\nimport { getProjectsPageThunk } from \"../../../redux/Dashboard/thunks/getProjectsPage\";\r\nimport { setProjectsPageAction } from \"../../../redux/Dashboard/actions/setProjectsPage\";\r\nimport { getProjectsPaginationThunk } from \"../../../redux/Dashboard/thunks/getProjectsPagination\";\r\nimport { setErrorAction } from \"../../../redux/Errors/actions/setError\";\r\n\r\nexport const Dashboard = withAuthRedirect(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const username = useSelector(getUserName);\r\n    const token = useSelector(getUserToken);\r\n    const page = useSelector(getActiveProjectsPage);\r\n    const paginationInfo = useSelector(getPaginationProjects);\r\n\r\n    useEffect(() => {\r\n        dispatch(getProjectsPaginationThunk(username, token))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(getProjectsPageThunk(username, token, page));\r\n    }, [page]);\r\n\r\n    const onPageChanged = (page) => {\r\n        dispatch(setProjectsPageAction(page))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.dashboard}>\r\n\r\n            <Pagination\r\n                page={page}\r\n                paginationInfo={paginationInfo}\r\n                pathname=\"/dashboard\"\r\n                setPage={setProjectsPageAction}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n\r\n            <Projects />\r\n        </div >\r\n    );\r\n});\r\n\r\nexport const Projects = () => {\r\n\r\n    const projects = useSelector(getProjects);\r\n\r\n    // Состояние модального окна\r\n    const [isCreateProject, setCreateProject] = useState(false);\r\n\r\n    return (\r\n        <div className={styles.projects}>\r\n\r\n            <CreateProjectCard setCreateProject={setCreateProject} />\r\n\r\n            {projects.map((project) =>\r\n                <DashboardItem\r\n                    key={project.id}\r\n                    project={project}\r\n                />\r\n            )}\r\n\r\n            <Modal isModal={isCreateProject} setModal={setCreateProject} title=\"Create Project\">\r\n                <CreateProjectForm />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CreateProjectCard = ({ setCreateProject }) => {\r\n    return (\r\n        <div onClick={() => setCreateProject(true)} className={styles.project + \" \" + styles.creator}>\r\n            <div className={styles.name}>Create project</div>\r\n        </div>\r\n    )\r\n}","F:\\smart-house\\src\\components\\Content\\Dashboard\\DashboardItem.jsx",[],"F:\\smart-house\\src\\DAL\\authAPI.js",[],"F:\\smart-house\\src\\components\\Content\\Dashboard\\Forms\\CreateProjectForm.jsx",["388"],"import React from \"react\";\r\nimport { Input, Textarea } from \"../../../../utils/form-helpers/FormСontrollers\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setErrorForm } from \"../../../../utils/form-helpers/SetErrorForm\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport styles from \"../../../../styles/Form.module.css\";\r\nimport { getUserName, getUserToken } from \"../../../../redux/Authtorization/selectors/authSelector\";\r\nimport { createProjectThunk } from \"../../../../redux/Dashboard/thunks/createProject\";\r\nimport { getProjectsPaginationThunk } from \"../../../../redux/Dashboard/thunks/getProjectsPagination\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPaginationProjects, getProjects } from \"../../../../redux/Dashboard/selectors/dashboardSelector\";\r\nimport { ErrorsForm } from \"../../../../utils/form-helpers/ErrorsForm\"\r\n\r\nexport const CreateProjectForm = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(getUserToken);\r\n    const username = useSelector(getUserName);\r\n    const { elementPerPage, size } = useSelector(getPaginationProjects)\r\n\r\n    const schema = yup.object().shape({\r\n        name: yup\r\n            .string()\r\n            .required(\"Name is a required field\")\r\n            .min(5, \"Name size is less than 5\")\r\n            .max(16, \"Name max size is 16\")\r\n            .test('space', 'Name has not space', (value) => {\r\n                return !value.includes(\" \")\r\n            }),\r\n        title: yup\r\n            .string()\r\n            .max(128, \"Title max size is 128\")\r\n    });\r\n\r\n    const { handleSubmit, register, setError, errors } = useForm({\r\n        reValidateMode: \"onSubmit\",\r\n        defaultValues: {\r\n            \"name\": \"\",\r\n            \"title\": \"\"\r\n        },\r\n        resolver: yupResolver(schema),\r\n    })\r\n\r\n    const onError = (e) => {\r\n        setErrorForm(e, setError);\r\n    };\r\n\r\n    const onSubmit = async (projectData) => {\r\n        const status = await dispatch(createProjectThunk(projectData, token, size, elementPerPage, setError));\r\n        if (status === 200) dispatch(getProjectsPaginationThunk(username, token));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit((projectData) => onSubmit(projectData), onError)}>\r\n\r\n            <Input register={register} type=\"text\" placeholder=\"Name\" name=\"name\" />\r\n\r\n            <Textarea register={register} type=\"text\" placeholder=\"Title\" name=\"title\" />\r\n\r\n            <ErrorsForm errors={errors} />\r\n\r\n            <button className={styles.btn}>Create</button>\r\n        </form >\r\n    )\r\n}\r\n\r\n","F:\\smart-house\\src\\components\\Content\\Dashboard\\Forms\\UpdateProjectForm.jsx",[],"F:\\smart-house\\src\\components\\Content\\Project\\Project.jsx",["389","390","391","392","393","394"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../../styles/Project.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getActiveThingsPage, getPaginationThings, getThings } from \"../../../redux/Things/selectors/thingsSelector\";\r\nimport { getUserToken } from \"../../../redux/Authtorization/selectors/authSelector\";\r\nimport { Modal } from \"../../../utils/component-helpers/Modal\"\r\nimport { Device } from \"./Device/Device\";\r\nimport { getProjectViewed } from \"../../../redux/Dashboard/selectors/dashboardSelector\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { UpdateProjectForm } from \"../Dashboard/Forms/UpdateProjectForm\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withAuthRedirect } from \"../../../HOC/withAuthRedirect\";\r\nimport { CreateDeviceModal } from \"./Device/Modals/CreateDeviceModal\";\r\nimport { Pagination } from \"../../../utils/component-helpers/Pagination\";\r\nimport { CreateSensorForm } from \"../Project/Sensor/Forms/CreateSensorForm\";\r\nimport { Sensor } from \"./Sensor/Sensor\";\r\nimport { setInitialProjectViewedAction } from \"../../../redux/Dashboard/actions/setInitialProjectViewed\";\r\nimport { setThingsPageAction } from \"../../../redux/Things/actions/setThingsPage\";\r\nimport { getThingsPaginationThunk } from \"../../../redux/Things/thunks/getThingsPagination\";\r\nimport { getProjectThunk } from \"../../../redux/Dashboard/thunks/getProject\";\r\nimport { getThingsPageThunk } from \"../../../redux/Things/thunks/getThingsPage\";\r\nimport { deleteProjectThunk } from \"../../../redux/Dashboard/thunks/deleteProject\"\r\nimport { setInitialStateAction } from \"../../../redux/Things/actions/setInitialState\";\r\nimport { setErrorAction } from \"../../../redux/Errors/actions/setError\";\r\n\r\nexport const Project = withAuthRedirect(withRouter((props) => {\r\n\r\n    // желательно заменить HOC на hook\r\n    let id = props.match.params.projectId;\r\n\r\n    const dispatch = useDispatch();\r\n    const thingsPage = useSelector(getActiveThingsPage);\r\n    const token = useSelector(getUserToken);\r\n    const things = useSelector(getThings);\r\n    const project = useSelector(getProjectViewed);\r\n    const paginationInfo = useSelector(getPaginationThings);\r\n\r\n    useEffect(() => {\r\n        dispatch(getThingsPaginationThunk(id, token));\r\n        dispatch(getProjectThunk(id, token));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(getThingsPageThunk(id, thingsPage, token));\r\n    }, [thingsPage])\r\n\r\n    useEffect(() => {\r\n        //set initialState после демонтирования компоненты \r\n        return () => {\r\n            dispatch(setInitialProjectViewedAction())\r\n            dispatch(setInitialStateAction())\r\n        }\r\n    }, [])\r\n\r\n    // Состояние модального окна Create Device \r\n    const [isCreateDevice, setCreateDevice] = useState(false);\r\n\r\n    // Состояние модального окна Update Project\r\n    const [isUpdateProject, setUpdateProject] = useState(false);\r\n\r\n    // Состояние модального окна Update Project\r\n    const [isCreateSensor, setCreateSensor] = useState(false);\r\n\r\n    const deleteProject = (id, token) => {\r\n        dispatch(deleteProjectThunk(id, token))\r\n    }\r\n\r\n    const onPageChanged = (page) => {\r\n        dispatch(setThingsPageAction(page))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.project}>\r\n\r\n            <div className={styles.projectHeader}>\r\n\r\n                <div className={styles.projectInfo}>\r\n                    <div className={styles.name}>{project.name}</div>\r\n                    <div className={styles.title}>{project.title}</ div >\r\n                </div>\r\n\r\n                <div className={styles.buttons}>\r\n                    <button onClick={() => { setCreateDevice(true) }}>\r\n                        <AddIcon /><div>Add Device</div>\r\n                    </button>\r\n                    <button onClick={() => { setCreateSensor(true) }}>\r\n                        <AddIcon /> <div>Add Sensor</div>\r\n                    </button>\r\n                    <button onClick={() => { setUpdateProject(true) }}>\r\n                        <CreateIcon /> <div>Edit</div>\r\n                    </button>\r\n                    <button onClick={() => { deleteProject(id, token) }}>\r\n                        <DeleteIcon /> <div>Delete</div>\r\n                    </button>\r\n                </div>\r\n            </div >\r\n\r\n            <Pagination\r\n                page={thingsPage}\r\n                paginationInfo={paginationInfo}\r\n                pathname={`/dashboard/project/${id}`}\r\n                setPage={setThingsPageAction}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n\r\n            <Things things={things} />\r\n\r\n            <CreateDeviceModal isModal={isCreateDevice} setModal={setCreateDevice} />\r\n\r\n            <Modal isModal={isUpdateProject} setModal={setUpdateProject} title=\"Update Project\">\r\n                <UpdateProjectForm />\r\n            </Modal>\r\n\r\n            <Modal isModal={isCreateSensor} setModal={setCreateSensor} title=\"Create Sensor\">\r\n                <CreateSensorForm />\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n    );\r\n}));\r\n\r\n\r\nexport const Things = ({ things }) => {\r\n    return (\r\n        <div className={styles.things}>\r\n            {things.map((thing) => {\r\n                if (thing.type === \"device\") {\r\n                    return <Device thing={thing} key={thing.entity.id} />\r\n                } else if (thing.type === \"sensor\") {\r\n                    return <Sensor thing={thing} key={thing.entity.id} />\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Device.jsx",[],"F:\\smart-house\\src\\DAL\\thingsAPI.js",[],"F:\\smart-house\\src\\components\\Charts\\Сhart.jsx",["395","396"],"import React from 'react';\r\nimport { scaleTime, scaleLinear } from '@visx/scale';\r\nimport { timeFormat } from \"d3-time-format\";\r\nimport { useData } from './useData';\r\nimport { AxisLeft, AxisBottom } from '@visx/axis';\r\nimport { GridRows, GridColumns } from '@visx/grid';\r\nimport { Marks } from './Marks';\r\nimport styles from \"../../styles/Chart.module.css\";\r\nimport { extent } from 'd3-array';\r\n\r\nconst width = 960;\r\nconst height = 500;\r\nconst margin = { top: 20, right: 0, bottom: 90, left: 100 };\r\n\r\nexport const Chart = ({ containerRef }) => {\r\n\r\n    const data = useData();\r\n    if (!data) {\r\n        return <pre>Loading...</pre>;\r\n    }\r\n\r\n    const xAxisTickFormat = timeFormat('%a');\r\n\r\n    const arr = []\r\n    const axisBottomTickValue = data.filter((d) => {\r\n        if (!arr.includes(xAxisTickFormat(d.time))) {\r\n            arr.push(xAxisTickFormat(d.time));\r\n            return true\r\n        }\r\n    })\r\n\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n    const innerWidth = width - margin.left - margin.right;\r\n\r\n    const xValue = d => d.time;\r\n\r\n    const yValue = d => d.value;\r\n\r\n    const xScale = scaleTime({\r\n        domain: extent(data, xValue),\r\n        range: [0, innerWidth],\r\n        nice: true,\r\n    });\r\n\r\n    const yScale = scaleLinear({\r\n        domain: extent(data, yValue),\r\n        range: [innerHeight, 0],\r\n        nice: true,\r\n    });\r\n\r\n    return (\r\n        <div className={styles.chart}>\r\n            <svg width={width} height={height}>\r\n                <g transform={`translate(${margin.left},${margin.top})`}>\r\n\r\n                    <GridRows scale={yScale} width={innerWidth} height={innerHeight} stroke=\"#e0e0e0\" />\r\n                    {/* <GridColumns scale={xScale} width={innerWidth} height={innerHeight} stroke=\"#e0e0e0\" /> */}\r\n\r\n                    <AxisBottom\r\n                        top={innerHeight}\r\n                        scale={xScale}\r\n                        tickFormat={xAxisTickFormat}\r\n                        tickValues={axisBottomTickValue.map(d => d.time)}\r\n                        label=\"Time\"\r\n                        labelClassName={styles.axisLabel}\r\n                        labelOffset={40}\r\n                    />\r\n                    <AxisLeft\r\n                        scale={yScale}\r\n                        label=\"Value\"\r\n                        labelClassName={styles.axisLabel}\r\n                        labelOffset={50}\r\n                    />\r\n                    <Marks\r\n                        margin={margin}\r\n                        data={data}\r\n                        xScale={xScale}\r\n                        yScale={yScale}\r\n                        xValue={xValue}\r\n                        yValue={yValue}\r\n                        tooltipFormat={xAxisTickFormat}\r\n                    />\r\n                </g>\r\n            </svg >\r\n        </div>\r\n    )\r\n}\r\n","F:\\smart-house\\src\\components\\Charts\\useData.js",[],"F:\\smart-house\\src\\components\\Charts\\Marks.jsx",["397"],"import { curveCatmullRom } from '@visx/curve';\r\nimport styles from \"../../styles/Chart.module.css\";\r\nimport { LinePath } from '@visx/shape';\r\nimport { useState } from 'react';\r\n\r\nexport const Marks = ({\r\n    data,\r\n    xScale,\r\n    yScale,\r\n    xValue,\r\n    yValue,\r\n    tooltipFormat,\r\n    circleRadius = 3\r\n}) => {\r\n\r\n    return (\r\n        <g className={styles.marks}>\r\n            <LinePath\r\n                data={data}\r\n                curve={curveCatmullRom}\r\n                x={d => xScale(xValue(d))}\r\n                y={d => yScale(yValue(d))}\r\n            />\r\n\r\n            {\r\n                data.map((d, key) => {\r\n                    return (\r\n                        // <svg key={key}>\r\n                        <circle cx={xScale(xValue(d))} cy={yScale(yValue(d))} r={circleRadius}>\r\n                            <title>{tooltipFormat(xValue(d))}</title>\r\n                        </circle>\r\n                        //    <line\r\n                        //         className={styles.tooltip}\r\n                        //         y2={innerHeight}\r\n                        //         x1={xScale(xValue(d))}\r\n                        //         x2={xScale(xValue(d))}\r\n                        //     />\r\n                        // </svg> \r\n                    )\r\n                })\r\n            }\r\n        </g>\r\n    )\r\n};\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Modals\\CreateDeviceModal.jsx",["398"],"import React, { useState } from \"react\";\r\nimport styles from \"../../../../../styles/DeviceEditModeModal.module.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { CreateDeviceForm } from '../Forms/CreateDeviceForm'\r\n\r\nexport const CreateDeviceModal = (props) => {\r\n\r\n    const { isModal, setModal } = props;\r\n\r\n    const [defaultState, setDefaultState] = useState(\"on\")\r\n    const [states, setStates] = useState([\"on\", \"off\"]);\r\n\r\n    return (\r\n        <div className={isModal ? styles.modalWrapper + \" \" + styles.open : styles.modalWrapper + \" \" + styles.close} >\r\n            <div className={styles.modalBody}>\r\n\r\n                <button className={styles.btnClose} onClick={() => setModal(false)}><CloseIcon /></button>\r\n\r\n                <div className={styles.title}>\r\n                    <Icons defaultState={defaultState} />\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <DeviceInfo\r\n                        states={states}\r\n                        setStates={setStates}\r\n                        defaultState={defaultState}\r\n                        setDefaultState={setDefaultState}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Icons = ({ defaultState }) => {\r\n\r\n    return (\r\n        <div className={styles.icons}>\r\n            <div></div>\r\n            <div>\r\n                <button className={styles.activeState}>{defaultState}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DeviceInfo = ({ states, setStates, defaultState, setDefaultState }) => {\r\n\r\n    return (\r\n        <div className={styles.states}>\r\n            {\r\n                states.map((state) => {\r\n                    return (\r\n                        <State\r\n                            key={state}\r\n                            state={state}\r\n                            states={states}\r\n                            setStates={setStates}\r\n                            length={states.length}\r\n                            defaultState={defaultState}\r\n                            setDefaultState={setDefaultState}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            <CreateDeviceForm states={states} setStates={setStates} defaultState={defaultState} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst State = ({ state, states, setStates, length, defaultState, setDefaultState }) => {\r\n\r\n    const deleteState = (state) => {\r\n        const statesCopy = [...states]\r\n        statesCopy.map((item, index) => {\r\n            if (item === state) {\r\n                statesCopy.splice(index, 1);\r\n                setStates(statesCopy);\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const getIcon = () => {\r\n        if (length > 2 && defaultState !== state) {\r\n            return <p onClick={() => deleteState(state)}><CloseIcon /></p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { state !== defaultState &&\r\n                <div className={styles.state}>\r\n                    <p onClick={() => setDefaultState(state)}>{state}</p>\r\n                    {getIcon()}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Sensor\\Forms\\CreateSensorForm.jsx",["399"],"import React from \"react\";\r\nimport { Input } from \"../../../../../utils/form-helpers/FormСontrollers\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setErrorForm } from \"../../../../../utils/form-helpers/SetErrorForm\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport styles from \"../../../../../styles/Form.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserToken } from \"../../../../../redux/Authtorization/selectors/authSelector\";\r\nimport { getProjectViewed } from \"../../../../../redux/Dashboard/selectors/dashboardSelector\";\r\nimport { getPaginationThings, getThings } from \"../../../../../redux/Things/selectors/thingsSelector\";\r\nimport { createSensorThunk } from \"../../../../../redux/Things/thunks/createSensor\";\r\nimport { ErrorsForm } from \"../../../../../utils/form-helpers/ErrorsForm\";\r\nimport { getThingsPaginationThunk } from \"../../../../../redux/Things/thunks/getThingsPagination\"\r\n\r\nexport const CreateSensorForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(getUserToken);\r\n    const project = useSelector(getProjectViewed).id;\r\n    const { elementPerPage, size } = useSelector(getPaginationThings)\r\n\r\n    const schema = yup.object().shape({\r\n        name: yup\r\n            .string()\r\n            .required(\"Name is a required field\")\r\n            .min(5, \"Name size is less than 5\")\r\n            .max(16, \"Name max size is 16\")\r\n            .test('space', 'States has not space', (value) => {\r\n                return !value.includes(\" \")\r\n            }),\r\n    });\r\n\r\n    const { handleSubmit, register, setError, errors } = useForm({\r\n        reValidateMode: \"onSubmit\",\r\n        defaultValues: {\r\n            \"name\": \"\",\r\n        },\r\n        resolver: yupResolver(schema),\r\n    })\r\n\r\n    const onError = (e) => {\r\n        setErrorForm(e, setError);\r\n    };\r\n\r\n    const onSubmit = async (sensorForm) => {\r\n        const status = await dispatch(createSensorThunk({ ...sensorForm, \"project\": project }, token, size, elementPerPage, setError));\r\n        if (status === 200) dispatch(getThingsPaginationThunk(project, token));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit((sensorForm) => onSubmit(sensorForm), onError)}>\r\n\r\n            <Input register={register} type=\"text\" placeholder=\"Name\" name=\"name\" error={errors.name} />\r\n\r\n            <ErrorsForm errors={errors} />\r\n\r\n            <button className={styles.btn}>Create</button>\r\n        </form >\r\n    )\r\n}","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Forms\\CreateDeviceForm.jsx",["400","401","402"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setErrorForm } from \"../../../../../utils/form-helpers/SetErrorForm\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport styles from \"../../../../../styles/DeviceForm.module.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserId, getUserToken } from \"../../../../../redux/Authtorization/selectors/authSelector\";\r\nimport { getPaginationThings, getThings } from \"../../../../../redux/Things/selectors/thingsSelector\";\r\nimport { getProjectViewed } from \"../../../../../redux/Dashboard/selectors/dashboardSelector\";\r\nimport { deviceStateValidation } from \"../../../../../utils/form-helpers/deviceStateValidation\";\r\nimport { ErrorsForm } from \"../../../../../utils/form-helpers/ErrorsForm.jsx\";\r\nimport { createDeviceThunk } from \"../../../../../redux/Things/thunks/createDevice\";\r\nimport { useFluxForm } from \"../../../../../hooks/useFluxForm\"\r\nimport { getThingsPaginationThunk } from \"../../../../../redux/Things/thunks/getThingsPagination\"\r\n\r\nexport const CreateDeviceForm = ({ states, setStates, defaultState }) => {\r\n\r\n    const schema = yup.object().shape({\r\n        state: yup\r\n            .string(),\r\n        name: yup\r\n            .string()\r\n            .required(\"Name is a required field\")\r\n            .min(2, \"Name size is less than 2\")\r\n            .max(16, \"Name max size is 16\"),\r\n\r\n    });\r\n\r\n    const { handleSubmit, register, setError, getValues, clearErrors, errors } = useForm({\r\n        reValidateMode: \"onSubmit\",\r\n        defaultValues: {\r\n            \"name\": \"\",\r\n            \"state\": \"\",\r\n        },\r\n        resolver: yupResolver(schema),\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(getUserToken);\r\n    const project = useSelector(getProjectViewed).id;\r\n    const { elementPerPage, size } = useSelector(getPaginationThings);\r\n\r\n    const [name, onChangeName] = useFluxForm(\"\");\r\n    const [state, onChangeState] = useFluxForm(\"\");\r\n\r\n    const [deviceForm, setDeviceForm] = useState({ \"states\": states, \"state\": defaultState, \"name\": \"\" });\r\n    useEffect(() => setDeviceForm(\r\n        { ...deviceForm, \"states\": states, \"state\": defaultState }),\r\n        [states, defaultState]);\r\n\r\n    const onError = (e) => {\r\n        setErrorForm(e, setError);\r\n    };\r\n\r\n    const onClick = () => {\r\n        const value = getValues('state')\r\n        clearErrors(\"state\")\r\n        deviceStateValidation(value, states, setStates, setError)\r\n    };\r\n\r\n    const onSubmit = async (form) => {\r\n        const status = await dispatch(\r\n            createDeviceThunk({ ...deviceForm, \"project\": project, \"name\": form.name },\r\n                token, size, elementPerPage, setError\r\n            ))\r\n        if (status === 200) dispatch(getThingsPaginationThunk(project, token))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className={styles.udpateForm} onSubmit={handleSubmit((form) => onSubmit(form), onError)}>\r\n\r\n                <input\r\n                    className={styles.updateNameInput}\r\n                    ref={register}\r\n                    name=\"name\"\r\n                    placeholder=\"Write name\"\r\n                    value={name}\r\n                    onChange={onChangeName}\r\n                />\r\n\r\n                {\r\n                    states.length < 10 &&\r\n                    <div className={styles.addStateForm}>\r\n                        <input\r\n                            className={styles.addInput}\r\n                            ref={register}\r\n                            name=\"state\"\r\n                            placeholder=\"Add new state\"\r\n                            value={state}\r\n                            onChange={onChangeState}\r\n                        />\r\n                        <button className={styles.addIcon} type=\"button\" onClick={onClick}><AddIcon /></button>\r\n                    </div>\r\n                }\r\n\r\n                <button className={styles.submitBtn} type=\"submit\">Create</button>\r\n\r\n            </form >\r\n\r\n\r\n            <ErrorsForm errors={errors} />\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Forms\\UpdateDeviceForm.jsx",["403"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setErrorForm } from \"../../../../../utils/form-helpers/SetErrorForm\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport styles from \"../../../../../styles/DeviceForm.module.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserToken } from \"../../../../../redux/Authtorization/selectors/authSelector\";\r\nimport { deviceStateValidation } from \"../../../../../utils/form-helpers/deviceStateValidation\";\r\nimport { ErrorsForm } from \"../../../../../utils/form-helpers/ErrorsForm.jsx\";\r\nimport { updateDeviceThunk } from \"../../../../../redux/Things/thunks/updateDevice\";\r\nimport { useFluxForm } from \"../../../../../hooks/useFluxForm\"\r\n\r\nexport const UpdateDeviceForm = ({ states, setStates, defaultName = \"\", id }) => {\r\n\r\n    const schema = yup.object().shape({\r\n        state: yup\r\n            .string(),\r\n        name: yup\r\n            .string()\r\n            .required(\"Name is a required field\")\r\n            .min(2, \"Name size is less than 2\")\r\n            .max(16, \"Name max size is 16\"),\r\n\r\n    });\r\n\r\n    const { handleSubmit, register, setError, getValues, clearErrors, errors } = useForm({\r\n        reValidateMode: \"onSubmit\",\r\n        defaultValues: {\r\n            \"name\": \"\",\r\n            \"state\": \"\",\r\n        },\r\n        resolver: yupResolver(schema),\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const userToken = useSelector(getUserToken);\r\n    const [name, onChangeName] = useFluxForm(defaultName);\r\n    const [state, onChangeState] = useFluxForm(\"\");\r\n\r\n    const [deviceForm, setDeviceForm] = useState({ \"states\": states, \"name\": defaultName })\r\n    useEffect(() => setDeviceForm({ ...deviceForm, \"states\": states }), [states])\r\n\r\n    const onError = (e) => {\r\n        setErrorForm(e, setError);\r\n    };\r\n\r\n    const onClick = () => {\r\n        const value = getValues('state')\r\n        clearErrors(\"state\")\r\n        deviceStateValidation(value, states, setStates, setError)\r\n    };\r\n\r\n    const onSubmit = (form) => {\r\n        dispatch(updateDeviceThunk({ ...deviceForm, \"name\": form.name }, userToken, id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className={styles.udpateForm} onSubmit={handleSubmit((form) => onSubmit(form), onError)}>\r\n\r\n                <input\r\n                    className={styles.updateNameInput}\r\n                    ref={register}\r\n                    name=\"name\"\r\n                    placeholder=\"Write name\"\r\n                    value={name}\r\n                    onChange={onChangeName}\r\n                />\r\n\r\n                {\r\n                    states.length < 10 &&\r\n                    <div className={styles.addStateForm}>\r\n                        <input\r\n                            className={styles.addInput}\r\n                            ref={register}\r\n                            name=\"state\"\r\n                            placeholder=\"Add new state\"\r\n                            value={state}\r\n                            onChange={onChangeState}\r\n                        />\r\n                        <button className={styles.addIcon} type=\"button\" onClick={onClick}><AddIcon /></button>\r\n                    </div>\r\n\r\n                }\r\n\r\n                <button className={styles.submitBtn} type=\"submit\">Update</button>\r\n\r\n            </form >\r\n\r\n            <ErrorsForm errors={errors} />\r\n\r\n        </>\r\n    )\r\n}\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Modals\\DeviceModal.jsx",["404","405"],"import React, { useState } from \"react\";\r\nimport styles from \"../../../../../styles/DeviceModal.module.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getActiveThingsPage } from \"../../../../../redux/Things/selectors/thingsSelector\";\r\nimport { getProjectViewed } from \"../../../../../redux/Dashboard/selectors/dashboardSelector\";\r\nimport { getUserToken } from \"../../../../../redux/Authtorization/selectors/authSelector\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { getTextIsCopied } from \"../../../../../utils/component-helpers/getTextIsCopied\";\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport fetching from \"../../../../../images/fetching.gif\"\r\nimport { LastActive } from \"../../../../../utils/component-helpers/LastActive\";\r\nimport { deleteDeviceThunk } from \"../../../../../redux/Things/thunks/deleteDevice\";\r\nimport { setDeviceStateThunk } from \"../../../../../redux/Things/thunks/setDeviceState\";\r\nimport { setErrorAction } from \"../../../../../redux/Errors/actions/setError\";\r\n\r\nexport const DeviceModal = (props) => {\r\n\r\n    const { isModal, setModal, thing, setEditMode } = props;\r\n\r\n    const id = thing.entity.id; //device id\r\n    const name = thing.entity.name;\r\n    const token = thing.entity.token\r\n\r\n    return (\r\n        <div className={isModal ? styles.modalWrapper + \" \" + styles.open : styles.modalWrapper + \" \" + styles.close} >\r\n            <div className={styles.modalBody}>\r\n                <button className={styles.btnClose} onClick={() => setModal(false)}><CloseIcon /></button>\r\n                <div className={styles.title}>\r\n                    <p>{name}</p>\r\n                    <Icons id={id} setModal={setModal} token={token} setEditMode={setEditMode} />\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <DeviceInfo thing={thing} />\r\n                </div>\r\n                <LastActive activity={thing.entity.activity} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Icons = ({ id, token, setModal, setEditMode }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const page = useSelector(getActiveThingsPage);\r\n    const project = useSelector(getProjectViewed).id; //project id\r\n    const userToken = useSelector(getUserToken);\r\n\r\n    const [isCopy, setCopy] = useState(false);\r\n\r\n    const deleteDevice = async () => {\r\n        const status = await dispatch(deleteDeviceThunk(id, page, project, userToken))\r\n        if (status === 200) {\r\n            setModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.icons}>\r\n            <div>\r\n                <CopyToClipboard text={token}\r\n                    onCopy={() => setCopy(true)}>\r\n                    <button><FileCopyOutlinedIcon /> {getTextIsCopied(isCopy, setCopy)}</button>\r\n                </CopyToClipboard>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => setEditMode(true)}><EditIcon /></button>\r\n                <button onClick={deleteDevice}><DeleteIcon /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DeviceInfo = (thing) => {\r\n\r\n    const states = thing.thing.entity.states;\r\n    const activeState = thing.thing.entity.state;\r\n    const token = thing.thing.entity.token;\r\n    const [isDisabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <div className={styles.states}>\r\n            {\r\n                states.map((state) => {\r\n                    return (\r\n                        <State\r\n                            key={state}\r\n                            state={state}\r\n                            activeState={activeState}\r\n                            token={token}\r\n                            isDisabled={isDisabled}\r\n                            setDisabled={setDisabled}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst State = ({ state, activeState, token, isDisabled, setDisabled }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isFetching, setFethcing] = useState(false);\r\n\r\n    const onClick = async () => {\r\n        if (state !== activeState && !isDisabled) {\r\n            setFethcing(true);\r\n            setDisabled(true);\r\n            const status = await dispatch(setDeviceStateThunk(state, token));\r\n            if (status === 204) {\r\n                dispatch(setErrorAction({ \"status\": 204, \"message\": \"No content\" }))\r\n            }\r\n            setFethcing(false);\r\n            setDisabled(false);\r\n        }\r\n        else if (state == activeState) {\r\n            dispatch(setErrorAction({ \"status\": 400, \"message\": \"State is active\" }))\r\n        }\r\n        else if (isDisabled) {\r\n            dispatch(setErrorAction({ \"status\": 400, \"message\": \"Another request in the queue\" }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.state} onClick={onClick}>\r\n            <p>{state}</p>\r\n            <p>{state === activeState && <CheckOutlinedIcon />}</p>\r\n            {isFetching && <p><img src={fetching} /></p>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Sensor\\Sensor.jsx",[],"F:\\smart-house\\src\\redux\\Authtorization\\reducer\\auth-reducer.js",[],"F:\\smart-house\\src\\redux\\Things\\reducer\\things-reducer.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\reducer\\dashboard-reducer.js",[],"F:\\smart-house\\src\\redux\\Errors\\reducer\\errors-reducer.js",[],"F:\\smart-house\\src\\redux\\Authtorization\\actions\\setCookie.js",[],"F:\\smart-house\\src\\redux\\Authtorization\\actions\\logout.js",["406"],"import Cookies from \"js-cookie\";\r\n\r\nexport const logoutAction = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: \"LOGOUT\" });\r\n        [\"username\", \"token\"].map(\r\n            (name) => {\r\n                Cookies.remove(name);\r\n            }\r\n        );\r\n    }\r\n}\r\n","F:\\smart-house\\src\\redux\\Authtorization\\selectors\\authSelector.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\selectors\\dashboardSelector.js",[],"F:\\smart-house\\src\\redux\\Errors\\actions\\deleteError.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\actions\\setProjectsPage.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\actions\\setIcon.js",[],"F:\\smart-house\\src\\redux\\Errors\\selectors\\errorsSelector.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\setThingsPage.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\getThingsPagination.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\getThingsPage.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\thunks\\deleteProject.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\thunks\\getProject.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\thunks\\getProjectsPagination.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\thunks\\getProjectsPage.js",[],"F:\\smart-house\\src\\redux\\Things\\selectors\\thingsSelector.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\actions\\setInitialProjectViewed.js",[],"F:\\smart-house\\src\\redux\\Authtorization\\actions\\setAuthUserData.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\actions\\setViewedProject.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\actions\\setProjects.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\setThings.js",[],"F:\\smart-house\\src\\redux\\Errors\\actions\\setError.js",[],"F:\\smart-house\\src\\redux\\Authtorization\\thunks\\signUp.js",[],"F:\\smart-house\\src\\redux\\Authtorization\\thunks\\signIn.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\thunks\\updateProject.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\actions\\updateProject.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\setInitialState.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\setThingsPagination.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\thunks\\createProject.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\actions\\createProject.js",[],"F:\\smart-house\\src\\redux\\Dashboard\\actions\\setProjectsPagination.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\createSensor.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\deleteDevice.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\setDeviceState.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\createDevice.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\createSensor.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\setDeviceState.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\updateDevice.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\createDevice.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\updateDevice.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\updateSensor.js",[],"F:\\smart-house\\src\\redux\\Things\\actions\\updateSensor.js",[],"F:\\smart-house\\src\\redux\\Things\\thunks\\deleteSensor.js",[],"F:\\smart-house\\src\\DAL\\dashboardAPI.js",[],"F:\\smart-house\\src\\utils\\component-helpers\\isAuthSetCookie.js",[],"F:\\smart-house\\src\\utils\\component-helpers\\ErrorsModal.jsx",[],"F:\\smart-house\\src\\utils\\component-helpers\\Modal.jsx",[],"F:\\smart-house\\src\\utils\\component-helpers\\Pagination.jsx",["407","408","409"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../styles/Pagination.module.css\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as queryString from \"query-string\";\r\nimport { setErrorAction } from \"../../redux/Errors/actions/setError\";\r\n\r\nexport const Pagination = ({ page, paginationInfo, pathname, onPageChanged, setPage }) => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const countPage = paginationInfo.pages;\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= countPage; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(countPage / 5);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionNumber = (portionNumber - 1) * 5 + 1;\r\n    const rightPortionNumber = 5 * portionNumber;\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search);\r\n        let actualPage = page;\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n        dispatch(setPage(actualPage))\r\n        // if actualPage > countPage || !isNaN(actualPage){\r\n        //  нужно добавить после того как сделаю инициализацию приложения\r\n        // }\r\n        // if (!isNaN(actualPage)) {\r\n        //     dispatch(setPage(actualPage))\r\n        // } else {\r\n        //     dispatch(setErrorAction({ \"status\": 400, \"message\": \"Not exist page\" }))\r\n        // }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query = {};\r\n        if (page !== 1) query.page = String(page);\r\n        history.push({\r\n            pathname: pathname,\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [page])\r\n\r\n    return (\r\n        <div className={styles.paginationWrapper}>\r\n            <div className={styles.pagination}>\r\n                {portionNumber > 1 ?\r\n                    <button onClick={() => setPortionNumber(portionNumber - 1)}><ArrowBackIcon /></button>\r\n                    :\r\n                    <button disabled><ArrowBackIcon /></button>\r\n                }\r\n\r\n                {pages\r\n                    .filter((page) => page >= leftPortionNumber && page <= rightPortionNumber)\r\n                    .map((page) => {\r\n                        return (\r\n                            <button key={page.toString()} onClick={() => onPageChanged(page)}\r\n                            >{page}</button>\r\n                        );\r\n                    })}\r\n\r\n                {portionNumber < portionCount ?\r\n                    <button onClick={() => setPortionNumber(portionNumber + 1)}><ArrowForwardIcon /></button>\r\n                    :\r\n                    <button disabled><ArrowForwardIcon /></button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","F:\\smart-house\\src\\utils\\form-helpers\\SetErrorForm.js",[],"F:\\smart-house\\src\\utils\\form-helpers\\FormСontrollers.jsx",[],"F:\\smart-house\\src\\utils\\component-helpers\\getTextIsCopied.js",[],"F:\\smart-house\\src\\utils\\form-helpers\\deviceStateValidation.js",["410"],"export const deviceStateValidation = (value, states, setStates, setError) => {\r\n    if (value.length > 16) {\r\n        return setError(\"state\", {\r\n            type: \"max\",\r\n            message: \"State max size is 16\"\r\n        });\r\n    } else if (value.length < 2) {\r\n        return setError(\"state\", {\r\n            type: \"min\",\r\n            message: \"State size is less than 2\"\r\n        });\r\n    } else if (value.includes(\" \")) {\r\n        return setError(\"state\", {\r\n            type: \"min\",\r\n            message: \"States has not space\"\r\n        });\r\n    } else {\r\n        let countDuplicates = 0;\r\n        states.map((state) => {\r\n            if (state === value) {\r\n                countDuplicates += 1;\r\n            }\r\n        })\r\n        if (countDuplicates > 0) {\r\n            return setError(\"state\", {\r\n                type: \"duplicates\",\r\n                message: \"Found duplicates string in states\"\r\n            });\r\n        } else {\r\n            const statesCopy = [...states]\r\n            statesCopy.push(value);\r\n            setStates(statesCopy);\r\n        }\r\n    }\r\n}","F:\\smart-house\\src\\utils\\component-helpers\\LastActive.jsx",[],"F:\\smart-house\\src\\utils\\component-helpers\\getLastActive.js",[],"F:\\smart-house\\src\\utils\\redux-helpers\\setErrors.js",[],"F:\\smart-house\\src\\utils\\redux-helpers\\createThing.js",[],"F:\\smart-house\\src\\utils\\redux-helpers\\updateThing.js",[],"F:\\smart-house\\src\\utils\\redux-helpers\\updateObjectArray.js",[],"F:\\smart-house\\src\\utils\\DAL-helpers\\instance.js",[],"F:\\smart-house\\src\\components\\Content\\Project\\Device\\Modals\\DeviceEditModeModal.jsx",["411"],"import React, { useState } from \"react\";\r\nimport styles from \"../../../../../styles/DeviceEditModeModal.module.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { getTextIsCopied } from \"../../../../../utils/component-helpers/getTextIsCopied\";\r\nimport { UpdateDeviceForm } from '../Forms/UpdateDeviceForm'\r\n\r\nexport const DeviceEditModeModal = (props) => {\r\n\r\n    const { isModal, setModal, thing, setEditMode } = props;\r\n\r\n    const token = thing.entity.token\r\n\r\n    const [states, setStates] = useState(thing.entity.states)\r\n\r\n    return (\r\n        <div className={isModal ? styles.modalWrapper + \" \" + styles.open : styles.modalWrapper + \" \" + styles.close} >\r\n            <div className={styles.modalBody}>\r\n\r\n                <button className={styles.arrowBackIcon} onClick={() => setEditMode(false)}><ArrowBackIcon /></button>\r\n                <button className={styles.btnClose} onClick={() => setModal(false)}><CloseIcon /></button>\r\n\r\n                <div className={styles.title}>\r\n                    <Icons token={token} activeState={thing.entity.state} />\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <DeviceInfo thing={thing} states={states} setStates={setStates} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Icons = ({ token, activeState }) => {\r\n\r\n    const [isCopy, setCopy] = useState(false);\r\n\r\n    return (\r\n        <div className={styles.icons}>\r\n            <div>\r\n                <CopyToClipboard text={token}\r\n                    onCopy={() => setCopy(true)}>\r\n                    <button className={styles.btnCopy}><FileCopyOutlinedIcon /> {getTextIsCopied(isCopy, setCopy)}</button>\r\n                </CopyToClipboard>\r\n            </div>\r\n            <div>\r\n                <button className={styles.activeState}>{activeState}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DeviceInfo = ({ thing, states, setStates }) => {\r\n\r\n    const activeState = thing.entity.state;\r\n    const length = states.length;\r\n    const name = thing.entity.name;\r\n    const id = thing.entity.id; //device id\r\n\r\n    return (\r\n        <div className={styles.states}>\r\n            {\r\n                states.map((state) => {\r\n                    return (\r\n                        <State\r\n                            key={state}\r\n                            state={state}\r\n                            states={states}\r\n                            setStates={setStates}\r\n                            activeState={activeState}\r\n                            length={length}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n            <UpdateDeviceForm states={states} setStates={setStates} defaultName={name} id={id} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst State = ({ state, states, setStates, activeState, length }) => {\r\n\r\n    const deleteState = (state) => {\r\n        const statesCopy = [...states]\r\n        statesCopy.map((item, index) => {\r\n            if (item === state) {\r\n                statesCopy.splice(index, 1);\r\n                setStates(statesCopy);\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                state !== activeState\r\n                &&\r\n                <div className={styles.state}>\r\n                    <p>{state}</p>\r\n                    {length > 2 && <p onClick={() => deleteState(state)}><CloseIcon /></p>}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","F:\\smart-house\\src\\hooks\\useFluxForm.js",[],"F:\\smart-house\\src\\utils\\form-helpers\\ErrorsForm.jsx",[],{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","replacedBy":"415"},{"ruleId":"416","severity":1,"message":"417","line":11,"column":10,"nodeType":"418","messageId":"419","endLine":11,"endColumn":15},{"ruleId":"416","severity":1,"message":"420","line":14,"column":10,"nodeType":"418","messageId":"419","endLine":14,"endColumn":24},{"ruleId":"421","severity":1,"message":"422","line":26,"column":8,"nodeType":"423","endLine":26,"endColumn":10,"suggestions":"424"},{"ruleId":"421","severity":1,"message":"422","line":30,"column":8,"nodeType":"423","endLine":30,"endColumn":14,"suggestions":"425"},{"ruleId":"416","severity":1,"message":"426","line":12,"column":33,"nodeType":"418","messageId":"419","endLine":12,"endColumn":44},{"ruleId":"416","severity":1,"message":"427","line":10,"column":8,"nodeType":"418","messageId":"419","endLine":10,"endColumn":20},{"ruleId":"416","severity":1,"message":"420","line":27,"column":10,"nodeType":"418","messageId":"419","endLine":27,"endColumn":24},{"ruleId":"421","severity":1,"message":"428","line":44,"column":8,"nodeType":"423","endLine":44,"endColumn":10,"suggestions":"429"},{"ruleId":"421","severity":1,"message":"428","line":48,"column":8,"nodeType":"423","endLine":48,"endColumn":20,"suggestions":"430"},{"ruleId":"421","severity":1,"message":"431","line":56,"column":8,"nodeType":"423","endLine":56,"endColumn":10,"suggestions":"432"},{"ruleId":"433","severity":1,"message":"434","line":131,"column":33,"nodeType":"435","messageId":"436","endLine":131,"endColumn":35},{"ruleId":"416","severity":1,"message":"437","line":6,"column":20,"nodeType":"418","messageId":"419","endLine":6,"endColumn":31},{"ruleId":"433","severity":1,"message":"438","line":25,"column":49,"nodeType":"435","messageId":"436","endLine":25,"endColumn":51},{"ruleId":"416","severity":1,"message":"439","line":4,"column":10,"nodeType":"418","messageId":"419","endLine":4,"endColumn":18},{"ruleId":"433","severity":1,"message":"440","line":75,"column":38,"nodeType":"435","messageId":"441","endLine":75,"endColumn":40},{"ruleId":"416","severity":1,"message":"442","line":11,"column":31,"nodeType":"418","messageId":"419","endLine":11,"endColumn":40},{"ruleId":"416","severity":1,"message":"443","line":9,"column":10,"nodeType":"418","messageId":"419","endLine":9,"endColumn":19},{"ruleId":"416","severity":1,"message":"442","line":10,"column":31,"nodeType":"418","messageId":"419","endLine":10,"endColumn":40},{"ruleId":"421","severity":1,"message":"444","line":51,"column":9,"nodeType":"423","endLine":51,"endColumn":31,"suggestions":"445"},{"ruleId":"421","severity":1,"message":"444","line":43,"column":73,"nodeType":"423","endLine":43,"endColumn":81,"suggestions":"446"},{"ruleId":"447","severity":1,"message":"448","line":121,"column":24,"nodeType":"449","messageId":"450","endLine":121,"endColumn":26},{"ruleId":"451","severity":1,"message":"452","line":133,"column":31,"nodeType":"453","endLine":133,"endColumn":53},{"ruleId":"433","severity":1,"message":"440","line":7,"column":20,"nodeType":"435","messageId":"441","endLine":7,"endColumn":22},{"ruleId":"416","severity":1,"message":"420","line":8,"column":10,"nodeType":"418","messageId":"419","endLine":8,"endColumn":24},{"ruleId":"421","severity":1,"message":"454","line":39,"column":8,"nodeType":"423","endLine":39,"endColumn":10,"suggestions":"455"},{"ruleId":"421","severity":1,"message":"456","line":48,"column":8,"nodeType":"423","endLine":48,"endColumn":14,"suggestions":"457"},{"ruleId":"433","severity":1,"message":"440","line":19,"column":28,"nodeType":"435","messageId":"441","endLine":19,"endColumn":30},{"ruleId":"433","severity":1,"message":"440","line":89,"column":38,"nodeType":"435","messageId":"441","endLine":89,"endColumn":40},"no-native-reassign",["458"],"no-negated-in-lhs",["459"],"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'setErrorAction' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["460"],["461"],"'getProjects' is defined but never used.","'SettingsIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'token'. Either include them or remove the dependency array.",["462"],["463"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["464"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'GridColumns' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'useState' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'getThings' is defined but never used.","'getUserId' is defined but never used.","React Hook useEffect has a missing dependency: 'deviceForm'. Either include it or remove the dependency array. You can also do a functional update 'setDeviceForm(d => ...)' if you only need 'deviceForm' in the 'setDeviceForm' call.",["465"],["466"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch', 'history.location.search', 'page', and 'setPage'. Either include them or remove the dependency array. If 'setPage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["467"],"React Hook useEffect has missing dependencies: 'history' and 'pathname'. Either include them or remove the dependency array.",["468"],"no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},"Update the dependencies array to be: [dispatch, token, username]",{"range":"487","text":"488"},"Update the dependencies array to be: [dispatch, page, token, username]",{"range":"489","text":"490"},"Update the dependencies array to be: [dispatch, id, token]",{"range":"491","text":"492"},"Update the dependencies array to be: [dispatch, id, thingsPage, token]",{"range":"493","text":"494"},"Update the dependencies array to be: [dispatch]",{"range":"495","text":"496"},"Update the dependencies array to be: [states, defaultState, deviceForm]",{"range":"497","text":"498"},"Update the dependencies array to be: [deviceForm, states]",{"range":"499","text":"500"},"Update the dependencies array to be: [dispatch, history.location.search, page, setPage]",{"range":"501","text":"502"},"Update the dependencies array to be: [history, page, pathname]",{"range":"503","text":"504"},[1474,1476],"[dispatch, token, username]",[1575,1581],"[dispatch, page, token, username]",[2519,2521],"[dispatch, id, token]",[2618,2630],"[dispatch, id, thingsPage, token]",[2863,2865],"[dispatch]",[2337,2359],"[states, defaultState, deviceForm]",[1862,1870],"[deviceForm, states]",[1573,1575],"[dispatch, history.location.search, page, setPage]",[1808,1814],"[history, page, pathname]"]