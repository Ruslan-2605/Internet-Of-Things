[{"F:\\smart-house\\src\\index.js":"1","F:\\smart-house\\src\\App.js":"2","F:\\smart-house\\src\\redux\\store.js":"3","F:\\smart-house\\src\\components\\Header\\Header.jsx":"4","F:\\smart-house\\src\\components\\Navbar\\Navbar.jsx":"5","F:\\smart-house\\src\\components\\utils\\SetErrorForm.js":"6","F:\\smart-house\\src\\components\\Login\\SignUp.jsx":"7","F:\\smart-house\\src\\components\\Login\\SignIn.jsx":"8","F:\\smart-house\\src\\redux\\selectors\\authSelector.js":"9","F:\\smart-house\\src\\redux\\reducers\\authReducer.js":"10","F:\\smart-house\\src\\components\\utils\\Modal.jsx":"11","F:\\smart-house\\src\\components\\utils\\FormСontrollers.jsx":"12","F:\\smart-house\\src\\components\\utils\\setErrorInThunk.js":"13","F:\\smart-house\\src\\HOC\\withAuthRedirect.jsx":"14","F:\\smart-house\\src\\components\\Content\\Dashboard\\Dashboard.jsx":"15","F:\\smart-house\\src\\components\\Content\\Dashboard\\DashboardItem.jsx":"16","F:\\smart-house\\src\\components\\utils\\updateObjectArray.js":"17","F:\\smart-house\\src\\DAL\\authAPI.js":"18","F:\\smart-house\\src\\DAL\\projectAPI.js":"19","F:\\smart-house\\src\\components\\Content\\Dashboard\\Forms\\CreateProjectForm.jsx":"20","F:\\smart-house\\src\\components\\Content\\Dashboard\\Forms\\UpdateProjectForm.jsx":"21","F:\\smart-house\\src\\components\\utils\\DeviceFormHelper.js":"22","F:\\smart-house\\src\\redux\\reducers\\thingsReducer.js":"23","F:\\smart-house\\src\\redux\\selectors\\thingsSelector.js":"24","F:\\smart-house\\src\\redux\\reducers\\projectsReducer.js":"25","F:\\smart-house\\src\\redux\\selectors\\projectsSelector.js":"26","F:\\smart-house\\src\\components\\utils\\isAuthSetCookie.js":"27","F:\\smart-house\\src\\components\\utils\\Switch.jsx":"28","F:\\smart-house\\src\\components\\utils\\getTextIsCopied.js":"29","F:\\smart-house\\src\\components\\utils\\LastActive.jsx":"30","F:\\smart-house\\src\\components\\utils\\getLastActive.js":"31","F:\\smart-house\\src\\components\\Content\\Project\\Project.jsx":"32","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Device.jsx":"33","F:\\smart-house\\src\\components\\Content\\Project\\Device\\DeviceModal.jsx":"34","F:\\smart-house\\src\\components\\Content\\Project\\Device\\DeviceModalEditMode.jsx":"35","F:\\smart-house\\src\\components\\Content\\Project\\Device\\CreateDeviceModal.jsx":"36","F:\\smart-house\\src\\components\\Content\\Project\\Forms\\UpdateDeviceForm.jsx":"37","F:\\smart-house\\src\\components\\Content\\Project\\Forms\\CreateDeviceForm.jsx":"38","F:\\smart-house\\src\\components\\utils\\stateValidation.js":"39","F:\\smart-house\\src\\components\\utils\\getErrorDeviceForm.js":"40","F:\\smart-house\\src\\components\\utils\\ErrorsModal.jsx":"41","F:\\smart-house\\src\\redux\\selectors\\errorsSelector.js":"42","F:\\smart-house\\src\\redux\\reducers\\errorsReducer.js":"43","F:\\smart-house\\src\\components\\utils\\setErrors.js":"44","F:\\smart-house\\src\\DAL\\thingsAPI.js":"45","F:\\smart-house\\src\\components\\utils\\Pagination.jsx":"46","F:\\smart-house\\src\\components\\Charts\\Сhart.jsx":"47","F:\\smart-house\\src\\components\\Charts\\useData.js":"48","F:\\smart-house\\src\\components\\Charts\\Marks.jsx":"49"},{"size":394,"mtime":1614600824416,"results":"50","hashOfConfig":"51"},{"size":1306,"mtime":1617121026641,"results":"52","hashOfConfig":"51"},{"size":797,"mtime":1616358348691,"results":"53","hashOfConfig":"51"},{"size":2288,"mtime":1615460611538,"results":"54","hashOfConfig":"51"},{"size":2733,"mtime":1614607303781,"results":"55","hashOfConfig":"51"},{"size":204,"mtime":1614607583804,"results":"56","hashOfConfig":"51"},{"size":2749,"mtime":1616435855241,"results":"57","hashOfConfig":"51"},{"size":2434,"mtime":1616488478477,"results":"58","hashOfConfig":"51"},{"size":370,"mtime":1615537988173,"results":"59","hashOfConfig":"51"},{"size":2220,"mtime":1616684067031,"results":"60","hashOfConfig":"51"},{"size":741,"mtime":1613666508610,"results":"61","hashOfConfig":"51"},{"size":1135,"mtime":1616089155970,"results":"62","hashOfConfig":"51"},{"size":466,"mtime":1616500766142,"results":"63","hashOfConfig":"51"},{"size":556,"mtime":1614607482791,"results":"64","hashOfConfig":"51"},{"size":3402,"mtime":1616689833647,"results":"65","hashOfConfig":"51"},{"size":639,"mtime":1616490733206,"results":"66","hashOfConfig":"51"},{"size":241,"mtime":1614607594628,"results":"67","hashOfConfig":"51"},{"size":722,"mtime":1615467083374,"results":"68","hashOfConfig":"51"},{"size":1571,"mtime":1615818394018,"results":"69","hashOfConfig":"51"},{"size":2475,"mtime":1616687660360,"results":"70","hashOfConfig":"51"},{"size":2178,"mtime":1616435636725,"results":"71","hashOfConfig":"51"},{"size":325,"mtime":1614247499237,"results":"72","hashOfConfig":"51"},{"size":6353,"mtime":1616683709764,"results":"73","hashOfConfig":"51"},{"size":324,"mtime":1616500304067,"results":"74","hashOfConfig":"51"},{"size":6222,"mtime":1616687780696,"results":"75","hashOfConfig":"51"},{"size":524,"mtime":1616499735237,"results":"76","hashOfConfig":"51"},{"size":503,"mtime":1614601037096,"results":"77","hashOfConfig":"51"},{"size":890,"mtime":1615627870226,"results":"78","hashOfConfig":"51"},{"size":206,"mtime":1616431442505,"results":"79","hashOfConfig":"51"},{"size":344,"mtime":1616091832481,"results":"80","hashOfConfig":"51"},{"size":554,"mtime":1616091702967,"results":"81","hashOfConfig":"51"},{"size":5739,"mtime":1616689906065,"results":"82","hashOfConfig":"51"},{"size":1618,"mtime":1616137113158,"results":"83","hashOfConfig":"51"},{"size":5318,"mtime":1616500540426,"results":"84","hashOfConfig":"51"},{"size":3658,"mtime":1616488690476,"results":"85","hashOfConfig":"51"},{"size":3176,"mtime":1616218613828,"results":"86","hashOfConfig":"51"},{"size":3100,"mtime":1616178793700,"results":"87","hashOfConfig":"51"},{"size":3469,"mtime":1616178803357,"results":"88","hashOfConfig":"51"},{"size":1073,"mtime":1616178699844,"results":"89","hashOfConfig":"51"},{"size":503,"mtime":1616178857041,"results":"90","hashOfConfig":"51"},{"size":1227,"mtime":1616688108309,"results":"91","hashOfConfig":"51"},{"size":146,"mtime":1616355956417,"results":"92","hashOfConfig":"51"},{"size":1743,"mtime":1616434852246,"results":"93","hashOfConfig":"51"},{"size":674,"mtime":1616501396759,"results":"94","hashOfConfig":"51"},{"size":1429,"mtime":1616505469258,"results":"95","hashOfConfig":"51"},{"size":2737,"mtime":1616690076465,"results":"96","hashOfConfig":"51"},{"size":2945,"mtime":1617121031777,"results":"97","hashOfConfig":"51"},{"size":949,"mtime":1617096210725,"results":"98","hashOfConfig":"51"},{"size":852,"mtime":1617121007545,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1wu141m",{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"F:\\smart-house\\src\\index.js",[],["216","217"],"F:\\smart-house\\src\\App.js",["218","219"],"import React, { useEffect } from 'react';\nimport { getIsAuth } from './redux/selectors/authSelector'\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./App.css\"\nimport { HeaderComponent } from './components/Header/Header';\nimport { NavbarComponent } from './components/Navbar/Navbar';\nimport { Dashboard } from './components/Content/Dashboard/Dashboard';\nimport { Route, useHistory } from 'react-router-dom';\nimport { Project } from './components/Content/Project/Project';\nimport { isAuthSetCookie } from './components/utils/isAuthSetCookie';\nimport { ErrorsModal } from './components/utils/ErrorsModal';\nimport { Chart } from './components/Charts/Сhart';\n\nexport const App = () => {\n  // Устанавливаю куки в стэйт если они присутствуют\n  const dispatch = useDispatch();\n  const isAuth = useSelector(getIsAuth);\n  isAuthSetCookie(isAuth, dispatch);\n\n  return (\n    <div className=\"wrapper\" >\n      <HeaderComponent />\n      <NavbarComponent />\n      <div className=\"wrapper-content\">\n        <Route exact path=\"/dashboard\" render={() => <Dashboard />} />\n        <Route path=\"/dashboard/project/:projectId?\" render={() => <Project />} />\n        <Route path=\"/chart\" render={() => <Chart />} />\n      </div>\n      <ErrorsModal />\n    </div>\n  );\n};\n","F:\\smart-house\\src\\redux\\store.js",[],"F:\\smart-house\\src\\components\\Header\\Header.jsx",[],"F:\\smart-house\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\smart-house\\src\\components\\utils\\SetErrorForm.js",[],"F:\\smart-house\\src\\components\\Login\\SignUp.jsx",[],"F:\\smart-house\\src\\components\\Login\\SignIn.jsx",[],"F:\\smart-house\\src\\redux\\selectors\\authSelector.js",[],"F:\\smart-house\\src\\redux\\reducers\\authReducer.js",["220","221","222","223"],"import { authAPI } from \"../../DAL/authAPI\";\r\nimport Cookies from 'js-cookie'\r\nimport { setErrorInThunk } from \"../../components/utils/setErrorInThunk\";\r\nimport { errorsReducer, setErrorActionCreator } from \"./errorsReducer\";\r\nimport { setErrors } from \"../../components/utils/setErrors\";\r\n\r\nconst SET_AUTH_USER_DATA = \"SET-AUTH-USER-DATA\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\nconst initialState = {\r\n    username: null,\r\n    token: null,\r\n    tokenValidity: null,\r\n    isAuth: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            };\r\n\r\n        case LOGOUT:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Action\r\nexport const setAuthUserData = (authData) => {\r\n    return {\r\n        type: \"SET-AUTH-USER-DATA\",\r\n        data: authData,\r\n    };\r\n};\r\n\r\nexport const logoutAction = () => {\r\n    return {\r\n        type: \"LOGOUT\",\r\n    };\r\n};\r\n\r\n//Action Creator\r\n\r\nexport const setCookie = (authData) => {\r\n    return (dispatch) => {\r\n        dispatch(setAuthUserData(authData))\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        dispatch(logoutAction());\r\n        [\"username\", \"token\"].map(\r\n            (name) => {\r\n                Cookies.remove(name);\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n// Redux-Thunk\r\n\r\nexport const signInThunkCreator = (authData, setError) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await authAPI.signIn(authData);\r\n            dispatch(setAuthUserData({ ...response.data, isAuth: true }))\r\n            return response.status;\r\n        } catch (error) {\r\n            setErrors(error, dispatch, setError);\r\n        }\r\n    };\r\n};\r\n\r\nexport const signUpThunkCreator = (authData, setError) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await authAPI.signUp(authData);\r\n            dispatch(setAuthUserData(response.data));\r\n            return response.status\r\n        } catch (error) {\r\n            setErrors(error, dispatch, setError);\r\n        }\r\n\r\n    };\r\n};\r\n\r\n","F:\\smart-house\\src\\components\\utils\\Modal.jsx",[],"F:\\smart-house\\src\\components\\utils\\FormСontrollers.jsx",["224"],"import React, { useState } from \"react\";\r\nimport styles from \"../../styles/Form.module.css\";\r\n\r\nexport const Input = ({ register, name, type, placeholder = null, error = null }) => {\r\n    return (\r\n        <div>\r\n            <input className={styles.input}\r\n                ref={register}\r\n                type={type}\r\n                name={name}\r\n                placeholder={placeholder}\r\n            />\r\n            <div className={styles.error}>{error && error.message}</div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const Textarea = ({ register, name, type, placeholder = null, error = null }) => {\r\n\r\n    // const [state, setState] = useState(value);\r\n\r\n    // const onChange = (e) => {\r\n    //     setState(e.target.value);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <textarea className={styles.textarea}\r\n                ref={register}\r\n                type={type}\r\n                name={name}\r\n                placeholder={placeholder}\r\n            // value={state}\r\n            // onChange={onChange}\r\n            />\r\n            <div className={styles.error}>{error && error.message}</div>\r\n        </div >\r\n    )\r\n}","F:\\smart-house\\src\\components\\utils\\setErrorInThunk.js",[],"F:\\smart-house\\src\\HOC\\withAuthRedirect.jsx",[],"F:\\smart-house\\src\\components\\Content\\Dashboard\\Dashboard.jsx",["225","226","227","228"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../../styles/Dashboard.module.css\";\r\nimport {\r\n    getPaginationProjectsInfoThunkCreator,\r\n    getProjectPageThunkCreator,\r\n    setPageProjectsActionCreator,\r\n} from \"../../../redux/reducers/projectsReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserName, getUserToken } from \"../../../redux/selectors/authSelector\";\r\nimport { getProjects, getActiveProjectsPage, getPaginationProjectsInfo } from \"../../../redux/selectors/projectsSelector\";\r\nimport { DashboardItem } from \"./DashboardItem\";\r\nimport { Modal } from \"../../utils/Modal\"\r\nimport { withAuthRedirect } from \"../../../HOC/withAuthRedirect\";\r\nimport { CreateProjectForm } from \"./Forms/CreateProjectForm\";\r\nimport { Pagination } from \"../../utils/Pagination\";\r\nimport { setError } from \"../../../redux/reducers/errorsReducer\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ContactSupportOutlined } from \"@material-ui/icons\";\r\n\r\nexport const Dashboard = withAuthRedirect(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const username = useSelector(getUserName);\r\n    const token = useSelector(getUserToken);\r\n    const page = useSelector(getActiveProjectsPage);\r\n    const paginationInfo = useSelector(getPaginationProjectsInfo);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPaginationProjectsInfoThunkCreator(username, token))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (page > paginationInfo.pages && page !== 1) {\r\n            dispatch(setError({ \"status\": 400, \"message\": \"Not exist page\" }));\r\n            if (paginationInfo.pages > 0) {\r\n                dispatch(setPageProjectsActionCreator(1));\r\n            }\r\n        }\r\n        else if (paginationInfo.pages > 0) {\r\n            dispatch(getProjectPageThunkCreator(username, token, page));\r\n        }\r\n    }, [username, token, page, paginationInfo]);\r\n\r\n    const onPageChanged = (page) => {\r\n        dispatch(setPageProjectsActionCreator(page))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.dashboard}>\r\n\r\n            <Pagination\r\n                page={page}\r\n                paginationInfo={paginationInfo}\r\n                pathname=\"/dashboard\"\r\n                setPage={setPageProjectsActionCreator}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n\r\n            <Projects />\r\n        </div >\r\n    );\r\n});\r\n\r\nexport const Projects = () => {\r\n\r\n    const projects = useSelector(getProjects);\r\n\r\n    // Состояние модального окна\r\n    const [isCreateProject, setCreateProject] = useState(false);\r\n\r\n    return (\r\n        <div className={styles.projects}>\r\n\r\n            <CreateProjectCard setCreateProject={setCreateProject} />\r\n\r\n            {projects.map((project) =>\r\n                <DashboardItem\r\n                    key={project.id}\r\n                    project={project}\r\n                />\r\n            )}\r\n\r\n            <Modal isModal={isCreateProject} setModal={setCreateProject} title=\"Create Project\">\r\n                <CreateProjectForm />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CreateProjectCard = ({ setCreateProject }) => {\r\n    return (\r\n        <div onClick={() => setCreateProject(true)} className={styles.project + \" \" + styles.creator}>\r\n            <div className={styles.name}>Create project</div>\r\n        </div>\r\n    )\r\n}","F:\\smart-house\\src\\components\\Content\\Dashboard\\DashboardItem.jsx",[],"F:\\smart-house\\src\\components\\utils\\updateObjectArray.js",[],"F:\\smart-house\\src\\DAL\\authAPI.js",[],"F:\\smart-house\\src\\DAL\\projectAPI.js",[],"F:\\smart-house\\src\\components\\Content\\Dashboard\\Forms\\CreateProjectForm.jsx",[],"F:\\smart-house\\src\\components\\Content\\Dashboard\\Forms\\UpdateProjectForm.jsx",[],"F:\\smart-house\\src\\components\\utils\\DeviceFormHelper.js",[],["229","230"],"F:\\smart-house\\src\\redux\\reducers\\thingsReducer.js",["231"],"import { ContactSupportOutlined } from \"@material-ui/icons\";\r\nimport { setErrors } from \"../../components/utils/setErrors\";\r\nimport { thingsAPI } from \"../../DAL/thingsAPI\";\r\nimport { setErrorActionCreator } from \"./errorsReducer\";\r\n\r\nconst SET_THINGS = \"SET-THINGS\";\r\nconst CREATE_DEVICE = \"CREATE-DEVICE\";\r\nconst UPDATE_DEVICE = \"UPDATE-DEVICE\";\r\nconst SET_PAGE_DEVICE = \"SET-PAGE-DEVICE\";\r\nconst SET_STATE = \"SET-STATE\";\r\nconst SET_INITIAL_STATE = \"SET-INITIAL-STATE\";\r\nconst SET_PAGINATION_THINGS_INFO = \"SET-PAGINATION-THINGS-INFO\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\nconst initialState = {\r\n    things: [],\r\n    page: 1,\r\n    paginationInfo: {},\r\n};\r\n\r\nexport const thingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_THINGS:\r\n            return {\r\n                ...state,\r\n                things: action.data,\r\n            };\r\n\r\n        case CREATE_DEVICE:\r\n            return {\r\n                ...state,\r\n                things: [\r\n                    ...state.things,\r\n                    {\r\n                        \"type\": \"device\",\r\n                        \"entity\": {\r\n                            ...action.data\r\n                        }\r\n                    },\r\n                ],\r\n            };\r\n\r\n        case UPDATE_DEVICE:\r\n            return {\r\n                ...state,\r\n                things: state.things.map((thing) => {\r\n                    switch (thing.type === \"device\") {\r\n                        case thing.entity.id === action.data.id:\r\n                            return { ...thing, ...{ \"entity\": { ...action.data } } }\r\n                        default:\r\n                            return thing;\r\n                    }\r\n                })\r\n            };\r\n\r\n        case SET_PAGE_DEVICE:\r\n            return {\r\n                ...state,\r\n                page: action.data,\r\n            };\r\n\r\n        case SET_STATE:\r\n            return {\r\n                ...state,\r\n                things: state.things.map((thing) => {\r\n                    switch (thing.type === \"device\") {\r\n                        case thing.entity.token === action.token:\r\n                            return { ...thing, ...{ \"entity\": { ...thing.entity, \"state\": action.state } } }\r\n                        default:\r\n                            return thing;\r\n                    }\r\n                })\r\n            };\r\n\r\n        case SET_PAGINATION_THINGS_INFO:\r\n            return {\r\n                ...state,\r\n                paginationInfo: action.data,\r\n            };\r\n\r\n        case SET_INITIAL_STATE:\r\n            return initialState;\r\n\r\n\r\n        case LOGOUT:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n// Action\r\n\r\nconst setThings = (things) => {\r\n    return {\r\n        type: \"SET-THINGS\",\r\n        data: things\r\n    }\r\n}\r\n\r\nconst createDevice = (response) => {\r\n    return {\r\n        type: \"CREATE-DEVICE\",\r\n        data: response\r\n    }\r\n}\r\n\r\nconst updateDevice = (device) => {\r\n    return {\r\n        type: \"UPDATE-DEVICE\",\r\n        data: device\r\n    }\r\n}\r\n\r\nconst setPage = (page) => {\r\n    return {\r\n        type: \"SET-PAGE-DEVICE\",\r\n        data: page\r\n    }\r\n}\r\n\r\nconst setState = (state, token) => {\r\n    return {\r\n        type: \"SET-STATE\",\r\n        state: state,\r\n        token: token\r\n    }\r\n}\r\n\r\nconst setInitialState = () => {\r\n    return {\r\n        type: \"SET-INITIAL-STATE\",\r\n    }\r\n}\r\n\r\nconst setPaginationInfo = (info) => {\r\n    return {\r\n        type: \"SET-PAGINATION-THINGS-INFO\",\r\n        data: info\r\n    }\r\n}\r\n\r\n// ActionCreator\r\nexport const setPageThingsActionCreator = (page) => {\r\n    return async (dispatch) => {\r\n        dispatch(setPage(page));\r\n    };\r\n}\r\n\r\nexport const setInitialStateActionCreator = () => {\r\n    return async (dispatch) => {\r\n        dispatch(setInitialState());\r\n    };\r\n}\r\n// Redux-Thunk\r\n\r\n//Get Things Array\r\n\r\nexport const getThingsPageThunkCreator = (id, page, token) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            //id of project\r\n            const response = await thingsAPI.getThings(id, page, token);\r\n            dispatch(setThings(response))\r\n        } catch (error) {\r\n            dispatch(setErrorActionCreator(error.response.data))\r\n        }\r\n    };\r\n};\r\n\r\n\r\n//Device CRUD\r\n\r\nexport const createDeviceThunkCreator = (deviceForm, token, thingsLength) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await thingsAPI.createDevice(deviceForm, token);\r\n            if (thingsLength < 25) {\r\n                //25 - максимальное количество проектов на странице\r\n                dispatch(createDevice(response))\r\n            }\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateDeviceThunkCreator = (deviceForm, token, id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await thingsAPI.updateDevice(deviceForm, token, id);\r\n            dispatch(updateDevice(response))\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteDeviceThunkCreator = (id, page, project, token) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await thingsAPI.deleteDevice(id, token);\r\n            dispatch(getThingsPageThunkCreator(project, page, token))\r\n            return response.status\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\nexport const setStateDeviceThunkCreator = (state, token) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            // token of device\r\n            const response = await thingsAPI.setState(state, token);\r\n            if (response.status === 200) {\r\n                dispatch(setState(response.data.body.state, token))\r\n            }\r\n            return response.status\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\n//Get count of Page\r\n\r\nexport const getPaginationThingsInfoThunkCreator = (project, token) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await thingsAPI.getPaginationInfo(project, token);\r\n            dispatch(setPaginationInfo(response))\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\n","F:\\smart-house\\src\\redux\\selectors\\thingsSelector.js",[],"F:\\smart-house\\src\\redux\\reducers\\projectsReducer.js",["232","233","234"],"import { Redirect } from \"react-router-dom\";\r\nimport { setErrorInThunk } from \"../../components/utils/setErrorInThunk\";\r\nimport { setErrors } from \"../../components/utils/setErrors\";\r\nimport { updateObjectArray } from \"../../components/utils/updateObjectArray\";\r\nimport { projectAPI } from \"../../DAL/projectAPI\";\r\nimport { setErrorActionCreator } from \"./errorsReducer\";\r\n\r\nconst SET_PROJECTS = \"SET-PROJECTS\";\r\nconst CREATE_PROJECT = \"CREATE-PROJECT\";\r\nconst UPDATE_PROJECT = \"UPDATE-PROJECT\";\r\nconst SET_ICON = \"SET-ICON\";\r\nconst SET_VIEWED_PROJECT = \"SET-VIEWED-PROJECT\";\r\nconst SET_PAGINATION_PROJECTS_INFO = \"SET-PAGINATION-PROJECTS-INFO\";\r\nconst SET_PAGE_PROJECTS = \"SET-PAGE-PROJECTS\";\r\nconst SET_INITIAL_PROJECT_VIEWED = \"SET-INITIAL-PROJECT-VIEWED\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\nconst initialState = {\r\n    page: 1,\r\n    paginationInfo: {},\r\n    projects: [],\r\n    projectViewed: {},\r\n    iconSelected: 1,\r\n};\r\n\r\nexport const projectsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.data,\r\n            };\r\n\r\n        case CREATE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: [\r\n                    ...state.projects,\r\n                    action.data,\r\n                ],\r\n            };\r\n\r\n        case UPDATE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: updateObjectArray(state.projects, action.data.id, \"id\", action.data)\r\n            };\r\n\r\n        case SET_ICON:\r\n            return {\r\n                ...state,\r\n                iconSelected: action.data,\r\n            };\r\n\r\n        case SET_VIEWED_PROJECT:\r\n            return {\r\n                ...state,\r\n                projectViewed: action.data,\r\n            };\r\n\r\n        case SET_PAGINATION_PROJECTS_INFO:\r\n            return {\r\n                ...state,\r\n                paginationInfo: action.data,\r\n            };\r\n\r\n        case SET_PAGE_PROJECTS:\r\n            return {\r\n                ...state,\r\n                page: action.data,\r\n            };\r\n\r\n        case SET_INITIAL_PROJECT_VIEWED:\r\n            return {\r\n                ...state,\r\n                projectViewed: {}\r\n            };\r\n\r\n        case LOGOUT:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Action\r\n\r\nconst setProjects = (projects) => {\r\n    return {\r\n        type: \"SET-PROJECTS\",\r\n        data: projects,\r\n    };\r\n};\r\n\r\nconst createProject = (project) => {\r\n    return {\r\n        type: \"CREATE-PROJECT\",\r\n        data: project,\r\n    };\r\n};\r\n\r\nconst updateProject = (projects) => {\r\n    return {\r\n        type: \"UPDATE-PROJECT\",\r\n        data: projects,\r\n    };\r\n};\r\n\r\nconst setIcon = (iconSelected) => {\r\n    return {\r\n        type: \"SET-ICON\",\r\n        data: iconSelected,\r\n    };\r\n};\r\n\r\nconst setViewedProject = (project) => {\r\n    return {\r\n        type: \"SET-VIEWED-PROJECT\",\r\n        data: project\r\n    }\r\n}\r\nconst setPaginationInfo = (info) => {\r\n    return {\r\n        type: \"SET-PAGINATION-PROJECTS-INFO\",\r\n        data: info\r\n    }\r\n}\r\nconst setPage = (page) => {\r\n    return {\r\n        type: \"SET-PAGE-PROJECTS\",\r\n        data: page\r\n    }\r\n}\r\nconst setInitialProjectViewed = () => {\r\n    return {\r\n        type: \"SET-INITIAL-PROJECT-VIEWED\",\r\n    }\r\n}\r\n\r\n\r\n// ActionCreator\r\n\r\nexport const setIconActionCreator = (iconSelected) => {\r\n    return (dispatch) => {\r\n        dispatch(setIcon(iconSelected));\r\n    };\r\n}\r\n\r\nexport const setPageProjectsActionCreator = (page) => {\r\n    return (dispatch) => {\r\n        dispatch(setPage(page));\r\n    };\r\n}\r\n\r\nexport const setInitialProjectViewedActionCreator = () => {\r\n    return (dispatch) => {\r\n        dispatch(setInitialProjectViewed());\r\n    };\r\n}\r\n\r\n\r\n// Redux-Thunk\r\n\r\n// Dashboard CRUD\r\n\r\nexport const getProjectPageThunkCreator = (username, token, page) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await projectAPI.getProjectPage(username, token, page);\r\n            dispatch(setProjects(response));\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\nexport const createProjectThunkCreator = (projectForm, token, projectLength, elementPerPage, setError) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await projectAPI.createProject(projectForm, token);\r\n            if (projectLength < elementPerPage) {\r\n                dispatch(createProject(response))\r\n            }\r\n        } catch (error) {\r\n            setErrors(error, dispatch, setError)\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateProjectThunkCreator = (projectForm, token, id, setError) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await projectAPI.updateProject(projectForm, token, id);\r\n            dispatch(updateProject(response))\r\n            dispatch(setViewedProject(response))\r\n        } catch (error) {\r\n            setErrors(error, dispatch, setError)\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteProjectThunkCreator = (id, token) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await projectAPI.deleteProject(id, token);\r\n            // Если перенесешь кнопку делете, то нужно сделать getProjectsPage\r\n            return response\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n//Get Project\r\n\r\nexport const getProjectThunkCreator = (id, token) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await projectAPI.getProject(id, token);\r\n            dispatch(setViewedProject(response))\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\n\r\n//Get count of Page\r\n\r\nexport const getPaginationProjectsInfoThunkCreator = (username, token) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await projectAPI.getPaginationInfo(username, token);\r\n            dispatch(setPaginationInfo(response))\r\n        } catch (error) {\r\n            setErrors(error, dispatch)\r\n        }\r\n    };\r\n};\r\n\r\n","F:\\smart-house\\src\\redux\\selectors\\projectsSelector.js",[],"F:\\smart-house\\src\\components\\utils\\isAuthSetCookie.js",[],"F:\\smart-house\\src\\components\\utils\\Switch.jsx",[],["235","236"],"F:\\smart-house\\src\\components\\utils\\getTextIsCopied.js",[],"F:\\smart-house\\src\\components\\utils\\LastActive.jsx",[],"F:\\smart-house\\src\\components\\utils\\getLastActive.js",[],"F:\\smart-house\\src\\components\\Content\\Project\\Project.jsx",["237","238","239","240","241"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../../styles/Project.module.css\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getActiveThingsPage, getPaginationThingsInfo, getThings } from \"../../../redux/selectors/thingsSelector\";\r\nimport { getUserToken } from \"../../../redux/selectors/authSelector\";\r\nimport { getPaginationThingsInfoThunkCreator, getThingsPageThunkCreator, setInitialStateActionCreator, setPageThingsActionCreator } from \"../../../redux/reducers/thingsReducer\";\r\nimport { Modal } from \"../../utils/Modal\"\r\nimport { Device } from \"./Device/Device\";\r\nimport { deleteProjectThunkCreator, getProjectThunkCreator, setInitialProjectViewedActionCreator } from \"../../../redux/reducers/projectsReducer\";\r\nimport { getProjectViewed } from \"../../../redux/selectors/projectsSelector\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { UpdateProjectForm } from \"../Dashboard/Forms/UpdateProjectForm\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withAuthRedirect } from \"../../../HOC/withAuthRedirect\";\r\nimport { CreateDeviceModal } from \"./Device/CreateDeviceModal\";\r\nimport { Pagination } from \"../../utils/Pagination\";\r\nimport * as queryString from \"query-string\";\r\nimport { setError } from \"../../../redux/reducers/errorsReducer\";\r\n\r\nexport const Project = withAuthRedirect(withRouter((props) => {\r\n\r\n    let id = props.match.params.projectId;\r\n\r\n    const dispatch = useDispatch();\r\n    const thingsPage = useSelector(getActiveThingsPage);\r\n    const token = useSelector(getUserToken);\r\n    const things = useSelector(getThings);\r\n    const project = useSelector(getProjectViewed);\r\n    const paginationInfo = useSelector(getPaginationThingsInfo);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPaginationThingsInfoThunkCreator(id, token));\r\n        dispatch(getProjectThunkCreator(id, token));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (thingsPage > paginationInfo.pages && thingsPage !== 1) {\r\n            dispatch(setError({ \"status\": 400, \"message\": \"Not exist page\" }));\r\n            if (paginationInfo.pages > 0) {\r\n                dispatch(setPageThingsActionCreator(1));\r\n            }\r\n        }\r\n        else if (paginationInfo.pages > 0) {\r\n            dispatch(getThingsPageThunkCreator(id, thingsPage, token));\r\n        }\r\n    }, [id, thingsPage, token, paginationInfo])\r\n\r\n    useEffect(() => {\r\n        //set initialState после демонтирования компоненты \r\n        return () => {\r\n            dispatch(setInitialProjectViewedActionCreator())\r\n            dispatch(setInitialStateActionCreator())\r\n        }\r\n    }, [])\r\n\r\n    // Состояние модального окна Create Device \r\n    const [isCreateDevice, setCreateDevice] = useState(false);\r\n\r\n    // Состояние модального окна Update Project\r\n    const [isUpdateProject, setUpdateProject] = useState(false);\r\n\r\n    const deleteProject = (id, token) => {\r\n        dispatch(deleteProjectThunkCreator(id, token))\r\n    }\r\n\r\n    const onPageChanged = (page) => {\r\n        dispatch(setPageThingsActionCreator(page))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.project}>\r\n\r\n            <div className={styles.projectHeader}>\r\n                <div className={styles.name}>{project.name}</div>\r\n\r\n                <nav>\r\n                    <div className={styles.dropdown}>\r\n                        <div className={styles.icon}>\r\n                            <SettingsIcon />\r\n                            <div>Settings</div>\r\n                        </div>\r\n                        <div className={styles.dropdownMenu}>\r\n                            <ul className={styles.submenu}>\r\n                                <li><button onClick={() => {\r\n                                    setCreateDevice(true)\r\n                                }}><AddIcon />\r\n                                    <div>Add</div>\r\n                                </button></li>\r\n                                <li><button onClick={() => {\r\n                                    setUpdateProject(true)\r\n                                }}>\r\n                                    <CreateIcon />\r\n                                    <div>Edit</div>\r\n                                </button></li>\r\n                                <li><button onClick={() => {\r\n                                    deleteProject(id, token)\r\n                                }}>\r\n                                    <DeleteIcon />\r\n                                    <div>Delete</div>\r\n                                </button></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n            <div className={styles.title}>{project.title}</ div >\r\n\r\n            <Pagination\r\n                page={thingsPage}\r\n                paginationInfo={paginationInfo}\r\n                pathname={`/dashboard/project/${id}`}\r\n                setPage={setPageThingsActionCreator}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n\r\n            <div className={styles.things}>{things.map((thing) => {\r\n                return <Device thing={thing} key={thing.entity.id} />\r\n            })}\r\n            </div>\r\n\r\n            <CreateDeviceModal isModal={isCreateDevice} setModal={setCreateDevice} />\r\n\r\n            <Modal isModal={isUpdateProject} setModal={setUpdateProject} title=\"Update Project\">\r\n                <UpdateProjectForm />\r\n            </Modal>\r\n        </div >\r\n\r\n    );\r\n}));\r\n\r\n\r\n\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Device\\Device.jsx",[],"F:\\smart-house\\src\\components\\Content\\Project\\Device\\DeviceModal.jsx",["242","243","244","245"],"import React, { useState } from \"react\";\r\nimport styles from \"../../../../styles/DeviceModal.module.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getActiveThingsPage, getPage } from \"../../../../redux/selectors/thingsSelector\";\r\nimport { getProjectViewed } from \"../../../../redux/selectors/projectsSelector\";\r\nimport { getUserToken } from \"../../../../redux/selectors/authSelector\";\r\nimport { deleteDeviceThunkCreator } from \"../../../../redux/reducers/thingsReducer\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { getTextIsCopied } from \"../../../utils/getTextIsCopied\";\r\nimport { setStateDeviceThunkCreator } from \"../../../../redux/reducers/thingsReducer\";\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport fetching from \"../../../../images/fetching.gif\"\r\nimport { LastActive } from \"../../../utils/LastActive.jsx\";\r\nimport { setErrors } from \"../../../utils/setErrors\";\r\nimport { setErrorActionCreator } from \"../../../../redux/reducers/errorsReducer\";\r\n\r\nexport const DeviceModal = (props) => {\r\n\r\n    const { isModal, setModal, thing, setEditMode } = props;\r\n\r\n    const id = thing.entity.id; //device id\r\n    const name = thing.entity.name;\r\n    const token = thing.entity.token\r\n\r\n    return (\r\n        <div className={isModal ? styles.modalWrapper + \" \" + styles.open : styles.modalWrapper + \" \" + styles.close} >\r\n            <div className={styles.modalBody}>\r\n                <button className={styles.btnClose} onClick={() => setModal(false)}><CloseIcon /></button>\r\n                <div className={styles.title}>\r\n                    <p>{name}</p>\r\n                    <Icons id={id} setModal={setModal} token={token} setEditMode={setEditMode} />\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <DeviceInfo thing={thing} />\r\n                </div>\r\n                <LastActive activity={thing.entity.activity} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Icons = ({ id, token, setModal, setEditMode }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const page = useSelector(getActiveThingsPage);\r\n    const project = useSelector(getProjectViewed).id; //project id\r\n    const userToken = useSelector(getUserToken);\r\n\r\n    const [isCopy, setCopy] = useState(false);\r\n\r\n    const deleteDevice = async () => {\r\n        const status = await dispatch(deleteDeviceThunkCreator(id, page, project, userToken))\r\n        if (status === 200) {\r\n            setModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.icons}>\r\n            <div>\r\n                <CopyToClipboard text={token}\r\n                    onCopy={() => setCopy(true)}>\r\n                    <button><FileCopyOutlinedIcon /> {getTextIsCopied(isCopy, setCopy)}</button>\r\n                </CopyToClipboard>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => setEditMode(true)}><EditIcon /></button>\r\n                <button onClick={deleteDevice}><DeleteIcon /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DeviceInfo = (thing) => {\r\n\r\n    const states = thing.thing.entity.states;\r\n    const activeState = thing.thing.entity.state;\r\n    const token = thing.thing.entity.token;\r\n    const [isDisabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <div className={styles.states}>\r\n            {\r\n                states.map((state) => {\r\n                    return (\r\n                        <State\r\n                            key={state}\r\n                            state={state}\r\n                            activeState={activeState}\r\n                            token={token}\r\n                            isDisabled={isDisabled}\r\n                            setDisabled={setDisabled}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst State = ({ state, activeState, token, isDisabled, setDisabled }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isFetching, setFethcing] = useState(false);\r\n\r\n    const onClick = async () => {\r\n        if (state !== activeState && !isDisabled) {\r\n            setFethcing(true);\r\n            setDisabled(true);\r\n            const status = await dispatch(setStateDeviceThunkCreator(state, token));\r\n            if (status === 204) {\r\n                dispatch(setErrorActionCreator({ \"status\": 204, \"message\": \"No content\" }))\r\n            }\r\n            setFethcing(false);\r\n            setDisabled(false);\r\n        }\r\n        else if (state == activeState) {\r\n            dispatch(setErrorActionCreator({ \"status\": 400, \"message\": \"State is active\" }))\r\n        }\r\n        else if (isDisabled) {\r\n            dispatch(setErrorActionCreator({ \"status\": 400, \"message\": \"Another request in the queue\" }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.state} onClick={onClick}>\r\n            <p>{state}</p>\r\n            <p>{state === activeState && <CheckOutlinedIcon />}</p>\r\n            {isFetching && <p><img src={fetching} /></p>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Device\\DeviceModalEditMode.jsx",["246"],"import React, { useState } from \"react\";\r\nimport styles from \"../../../../styles/DeviceModalEditMode.module.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { getTextIsCopied } from \"../../../utils/getTextIsCopied\";\r\nimport { UpdateDeviceForm } from '../Forms/UpdateDeviceForm'\r\n\r\nexport const DeviceModalEditMode = (props) => {\r\n\r\n    const { isModal, setModal, thing, setEditMode } = props;\r\n\r\n    const token = thing.entity.token\r\n\r\n    const [states, setStates] = useState(thing.entity.states)\r\n\r\n    return (\r\n        <div className={isModal ? styles.modalWrapper + \" \" + styles.open : styles.modalWrapper + \" \" + styles.close} >\r\n            <div className={styles.modalBody}>\r\n\r\n                <button className={styles.arrowBackIcon} onClick={() => setEditMode(false)}><ArrowBackIcon /></button>\r\n                <button className={styles.btnClose} onClick={() => setModal(false)}><CloseIcon /></button>\r\n\r\n                <div className={styles.title}>\r\n                    <Icons token={token} activeState={thing.entity.state} />\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <DeviceInfo thing={thing} states={states} setStates={setStates} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Icons = ({ token, activeState }) => {\r\n\r\n    const [isCopy, setCopy] = useState(false);\r\n\r\n    return (\r\n        <div className={styles.icons}>\r\n            <div>\r\n                <CopyToClipboard text={token}\r\n                    onCopy={() => setCopy(true)}>\r\n                    <button className={styles.btnCopy}><FileCopyOutlinedIcon /> {getTextIsCopied(isCopy, setCopy)}</button>\r\n                </CopyToClipboard>\r\n            </div>\r\n            <div>\r\n                <button className={styles.activeState}>{activeState}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DeviceInfo = ({ thing, states, setStates }) => {\r\n\r\n    const activeState = thing.entity.state;\r\n    const length = states.length;\r\n    const name = thing.entity.name;\r\n    const id = thing.entity.id; //device id\r\n\r\n    return (\r\n        <div className={styles.states}>\r\n            {\r\n                states.map((state) => {\r\n                    return (\r\n                        <State\r\n                            key={state}\r\n                            state={state}\r\n                            states={states}\r\n                            setStates={setStates}\r\n                            activeState={activeState}\r\n                            length={length}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n            <UpdateDeviceForm states={states} setStates={setStates} name={name} id={id} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst State = ({ state, states, setStates, activeState, length }) => {\r\n\r\n    const deleteState = (state) => {\r\n        const statesCopy = [...states]\r\n        statesCopy.map((item, index) => {\r\n            if (item === state) {\r\n                statesCopy.splice(index, 1);\r\n                setStates(statesCopy);\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                state !== activeState\r\n                &&\r\n                <div className={styles.state}>\r\n                    <p>{state}</p>\r\n                    {length > 2 && <p onClick={() => deleteState(state)}><CloseIcon /></p>}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Device\\CreateDeviceModal.jsx",["247"],"import React, { useState } from \"react\";\r\nimport styles from \"../../../../styles/DeviceModalEditMode.module.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { CreateDeviceForm } from '../Forms/CreateDeviceForm'\r\n\r\nexport const CreateDeviceModal = (props) => {\r\n\r\n    const { isModal, setModal } = props;\r\n\r\n    const [defaultState, setDefaultState] = useState(\"on\")\r\n    const [states, setStates] = useState([\"on\", \"off\"]);\r\n\r\n    return (\r\n        <div className={isModal ? styles.modalWrapper + \" \" + styles.open : styles.modalWrapper + \" \" + styles.close} >\r\n            <div className={styles.modalBody}>\r\n\r\n                <button className={styles.btnClose} onClick={() => setModal(false)}><CloseIcon /></button>\r\n\r\n                <div className={styles.title}>\r\n                    <Icons defaultState={defaultState} />\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <DeviceInfo\r\n                        states={states}\r\n                        setStates={setStates}\r\n                        defaultState={defaultState}\r\n                        setDefaultState={setDefaultState}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Icons = ({ defaultState }) => {\r\n\r\n    return (\r\n        <div className={styles.icons}>\r\n            <div></div>\r\n            <div>\r\n                <button className={styles.activeState}>{defaultState}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DeviceInfo = ({ states, setStates, defaultState, setDefaultState }) => {\r\n\r\n    return (\r\n        <div className={styles.states}>\r\n            {\r\n                states.map((state) => {\r\n                    return (\r\n                        <State\r\n                            key={state}\r\n                            state={state}\r\n                            states={states}\r\n                            setStates={setStates}\r\n                            length={states.length}\r\n                            defaultState={defaultState}\r\n                            setDefaultState={setDefaultState}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            <CreateDeviceForm states={states} setStates={setStates} defaultState={defaultState} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst State = ({ state, states, setStates, length, defaultState, setDefaultState }) => {\r\n\r\n    const deleteState = (state) => {\r\n        const statesCopy = [...states]\r\n        statesCopy.map((item, index) => {\r\n            if (item === state) {\r\n                statesCopy.splice(index, 1);\r\n                setStates(statesCopy);\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const getIcon = () => {\r\n        if (length > 2 && defaultState !== state) {\r\n            return <p onClick={() => deleteState(state)}><CloseIcon /></p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { state !== defaultState &&\r\n                <div className={styles.state}>\r\n                    <p onClick={() => setDefaultState(state)}>{state}</p>\r\n                    {getIcon()}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Forms\\UpdateDeviceForm.jsx",["248"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setErrorForm } from \"../../../utils/SetErrorForm\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport styles from \"../../../../styles/DeviceForm.module.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateDeviceThunkCreator } from \"../../../../redux/reducers/thingsReducer\";\r\nimport { getUserToken } from \"../../../../redux/selectors/authSelector\";\r\nimport { stateValidation } from \"../../../utils/stateValidation\";\r\nimport { getErrorDeviceForm } from \"../../../utils/getErrorDeviceForm\";\r\n\r\nexport const UpdateDeviceForm = ({ states, setStates, name = \"\", id }) => {\r\n\r\n    const schema = yup.object().shape({\r\n        state: yup\r\n            .string(),\r\n        name: yup\r\n            .string()\r\n            .required(\"Name is a required field\")\r\n            .min(2, \"Name size is less than 2\")\r\n            .max(16, \"Name max size is 16\"),\r\n\r\n    });\r\n\r\n    const { handleSubmit, register, setError, getValues, clearErrors, errors } = useForm({\r\n        reValidateMode: \"onSubmit\",\r\n        defaultValues: {\r\n            \"name\": name,\r\n            \"state\": \"\",\r\n        },\r\n        resolver: yupResolver(schema),\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const userToken = useSelector(getUserToken);\r\n\r\n    const [deviceForm, setDeviceForm] = useState({ \"states\": states, \"name\": name })\r\n    useEffect(() => setDeviceForm({ ...deviceForm, \"states\": states }), [states])\r\n\r\n    const onError = (e) => {\r\n        setErrorForm(e, setError);\r\n    };\r\n\r\n    const onClick = () => {\r\n        const value = getValues('state')\r\n        clearErrors(\"state\")\r\n        stateValidation(value, states, setStates, setError)\r\n    };\r\n\r\n    const onSubmit = (form) => {\r\n        dispatch(updateDeviceThunkCreator({ ...deviceForm, \"name\": form.name }, userToken, id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className={styles.udpateForm} onSubmit={handleSubmit((form) => onSubmit(form), onError)}>\r\n\r\n                <input\r\n                    className={styles.updateNameInput}\r\n                    ref={register}\r\n                    name=\"name\"\r\n                    placeholder=\"Write name\"\r\n                />\r\n\r\n                {\r\n                    states.length < 10 &&\r\n                    <div className={styles.addStateForm}>\r\n                        <input\r\n                            className={styles.addInput}\r\n                            ref={register}\r\n                            name=\"state\"\r\n                            placeholder=\"Add new state\"\r\n                        />\r\n                        <button className={styles.addIcon} type=\"button\" onClick={onClick}><AddIcon /></button>\r\n                    </div>\r\n\r\n                }\r\n\r\n                <button className={styles.submitBtn} type=\"submit\">Update</button>\r\n\r\n            </form >\r\n            {\r\n                getErrorDeviceForm(errors)\r\n            }\r\n        </>\r\n    )\r\n}\r\n","F:\\smart-house\\src\\components\\Content\\Project\\Forms\\CreateDeviceForm.jsx",["249"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setErrorForm } from \"../../../utils/SetErrorForm\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport styles from \"../../../../styles/DeviceForm.module.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserToken } from \"../../../../redux/selectors/authSelector\";\r\nimport { getThings } from \"../../../../redux/selectors/thingsSelector\";\r\nimport { getProjectViewed } from \"../../../../redux/selectors/projectsSelector\";\r\nimport { createDeviceThunkCreator } from \"../../../../redux/reducers/thingsReducer\";\r\nimport { stateValidation } from \"../../../utils/stateValidation\";\r\nimport { getErrorDeviceForm } from \"../../../utils/getErrorDeviceForm\";\r\n\r\nexport const CreateDeviceForm = ({ states, setStates, defaultState }) => {\r\n\r\n    const schema = yup.object().shape({\r\n        state: yup\r\n            .string(),\r\n        name: yup\r\n            .string()\r\n            .required(\"Name is a required field\")\r\n            .min(2, \"Name size is less than 2\")\r\n            .max(16, \"Name max size is 16\"),\r\n\r\n    });\r\n\r\n    const { handleSubmit, register, setError, getValues, clearErrors, errors } = useForm({\r\n        reValidateMode: \"onSubmit\",\r\n        defaultValues: {\r\n            \"name\": \"\",\r\n            \"state\": \"\",\r\n        },\r\n        resolver: yupResolver(schema),\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(getUserToken);\r\n    const thingsLength = useSelector(getThings).length;\r\n    const project = useSelector(getProjectViewed).id;\r\n\r\n    const [deviceForm, setDeviceForm] = useState({ \"states\": states, \"state\": defaultState, \"name\": \"\" });\r\n    useEffect(() => setDeviceForm(\r\n        { ...deviceForm, \"states\": states, \"state\": defaultState }),\r\n        [states, defaultState]);\r\n\r\n    const onError = (e) => {\r\n        setErrorForm(e, setError);\r\n    };\r\n\r\n    const onClick = () => {\r\n        const value = getValues('state')\r\n        clearErrors(\"state\")\r\n        stateValidation(value, states, setStates, setError)\r\n    };\r\n\r\n    const onSubmit = (form) => {\r\n        dispatch(createDeviceThunkCreator({ ...deviceForm, \"project\": project, \"name\": form.name }, token, thingsLength))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className={styles.udpateForm} onSubmit={handleSubmit((form) => onSubmit(form), onError)}>\r\n\r\n                <input\r\n                    className={styles.updateNameInput}\r\n                    ref={register}\r\n                    name=\"name\"\r\n                    placeholder=\"Write name\"\r\n                />\r\n\r\n                {\r\n                    states.length < 10 &&\r\n                    <div className={styles.addStateForm}>\r\n                        <input\r\n                            className={styles.addInput}\r\n                            ref={register}\r\n                            name=\"state\"\r\n                            placeholder=\"Add new state\"\r\n                        />\r\n                        <button className={styles.addIcon} type=\"button\" onClick={onClick}><AddIcon /></button>\r\n                    </div>\r\n                }\r\n\r\n                <button className={styles.submitBtn} type=\"submit\">Create</button>\r\n\r\n            </form >\r\n\r\n            {\r\n                getErrorDeviceForm(errors)\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","F:\\smart-house\\src\\components\\utils\\stateValidation.js",["250"],"export const stateValidation = (value, states, setStates, setError) => {\r\n    if (value.length > 16) {\r\n        return setError(\"state\", {\r\n            type: \"max\",\r\n            message: \"State max size is 16\"\r\n        });\r\n    } else if (value.length < 2) {\r\n        return setError(\"state\", {\r\n            type: \"min\",\r\n            message: \"State size is less than 2\"\r\n        });\r\n    } else if (value.includes(\" \")) {\r\n        return setError(\"state\", {\r\n            type: \"min\",\r\n            message: \"States has not space\"\r\n        });\r\n    } else {\r\n        let countDuplicates = 0;\r\n        states.map((state) => {\r\n            if (state === value) {\r\n                countDuplicates += 1;\r\n            }\r\n        })\r\n        if (countDuplicates > 0) {\r\n            return setError(\"state\", {\r\n                type: \"duplicates\",\r\n                message: \"Found duplicates string in states\"\r\n            });\r\n        } else {\r\n            const statesCopy = [...states]\r\n            statesCopy.push(value);\r\n            setStates(statesCopy);\r\n        }\r\n    }\r\n}","F:\\smart-house\\src\\components\\utils\\getErrorDeviceForm.js",[],"F:\\smart-house\\src\\components\\utils\\ErrorsModal.jsx",["251"],"import React, { useState } from \"react\";\r\nimport styles from \"../../styles/ErrorsModal.module.css\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getErrorsArray } from \"../../redux/selectors/errorsSelector\";\r\nimport { deleteErrorActionCreator } from \"../../redux/reducers/errorsReducer\"\r\n\r\nexport const ErrorsModal = () => {\r\n\r\n    const errors = useSelector(getErrorsArray);\r\n\r\n    return (\r\n        <div className={errors ? styles.modalWrapper + \" \" + styles.open : styles.modalWrapper + \" \" + styles.close} >\r\n            {\r\n                errors.map((error, key) => {\r\n                    return <Error key={key} index={key} error={error} />\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Error = React.memo(({ error, index }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    setTimeout(() => dispatch(deleteErrorActionCreator(index)), 5000);\r\n\r\n    return (\r\n        <div className={styles.content}>\r\n            <p>{error.message ? error.message : \"Some error\"}</p>\r\n            <button className={styles.btnClose} onClick={() => dispatch(deleteErrorActionCreator(index))}><CloseIcon /></button>\r\n        </div>\r\n    )\r\n})","F:\\smart-house\\src\\redux\\selectors\\errorsSelector.js",[],"F:\\smart-house\\src\\redux\\reducers\\errorsReducer.js",[],"F:\\smart-house\\src\\components\\utils\\setErrors.js",[],"F:\\smart-house\\src\\DAL\\thingsAPI.js",[],"F:\\smart-house\\src\\components\\utils\\Pagination.jsx",["252","253"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../styles/Pagination.module.css\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as queryString from \"query-string\";\r\nimport { setError } from \"../../redux/reducers/errorsReducer\";\r\n\r\nexport const Pagination = ({ page, paginationInfo, pathname, onPageChanged, setPage }) => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const countPage = paginationInfo.pages;\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= countPage; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(countPage / 5);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionNumber = (portionNumber - 1) * 5 + 1;\r\n    const rightPortionNumber = 5 * portionNumber;\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search);\r\n        let actualPage = page;\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n        // if actualPage > countPage || !isNaN(actualPage){\r\n        //  нужно добавить после того как сделаю инициализацию приложения\r\n        // }\r\n        if (!isNaN(actualPage)) {\r\n            dispatch(setPage(actualPage))\r\n        } else {\r\n            dispatch(setError({ \"status\": 400, \"message\": \"Not exist page\" }))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query = {};\r\n        if (page !== 1) query.page = String(page);\r\n        history.push({\r\n            pathname: pathname,\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [page])\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n\r\n            {portionNumber > 1 ?\r\n                <button onClick={() => setPortionNumber(portionNumber - 1)}><ArrowBackIcon /></button>\r\n                :\r\n                <button disabled><ArrowBackIcon /></button>\r\n            }\r\n\r\n            {pages\r\n                .filter((page) => page >= leftPortionNumber && page <= rightPortionNumber)\r\n                .map((page) => {\r\n                    return (\r\n                        <button key={page.toString()} onClick={() => onPageChanged(page)}\r\n                        >{page}</button>\r\n                    );\r\n                })}\r\n\r\n            {portionNumber < portionCount ?\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}><ArrowForwardIcon /></button>\r\n                :\r\n                <button disabled><ArrowForwardIcon /></button>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n","F:\\smart-house\\src\\components\\Charts\\Сhart.jsx",["254","255"],"F:\\smart-house\\src\\components\\Charts\\useData.js",[],"F:\\smart-house\\src\\components\\Charts\\Marks.jsx",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":26},{"ruleId":"260","severity":1,"message":"264","line":8,"column":17,"nodeType":"262","messageId":"263","endLine":8,"endColumn":27},{"ruleId":"260","severity":1,"message":"265","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":25},{"ruleId":"260","severity":1,"message":"266","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":23},{"ruleId":"260","severity":1,"message":"267","line":4,"column":25,"nodeType":"262","messageId":"263","endLine":4,"endColumn":46},{"ruleId":"268","severity":1,"message":"269","line":60,"column":20,"nodeType":"270","messageId":"271","endLine":60,"endColumn":22},{"ruleId":"260","severity":1,"message":"272","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"273","line":18,"column":10,"nodeType":"262","messageId":"263","endLine":18,"endColumn":32},{"ruleId":"260","severity":1,"message":"274","line":23,"column":11,"nodeType":"262","messageId":"263","endLine":23,"endColumn":18},{"ruleId":"275","severity":1,"message":"276","line":31,"column":8,"nodeType":"277","endLine":31,"endColumn":10,"suggestions":"278"},{"ruleId":"275","severity":1,"message":"279","line":43,"column":8,"nodeType":"277","endLine":43,"endColumn":47,"suggestions":"280"},{"ruleId":"256","replacedBy":"281"},{"ruleId":"258","replacedBy":"282"},{"ruleId":"260","severity":1,"message":"273","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":32},{"ruleId":"260","severity":1,"message":"283","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":18},{"ruleId":"260","severity":1,"message":"265","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":25},{"ruleId":"260","severity":1,"message":"267","line":6,"column":10,"nodeType":"262","messageId":"263","endLine":6,"endColumn":31},{"ruleId":"256","replacedBy":"284"},{"ruleId":"258","replacedBy":"285"},{"ruleId":"260","severity":1,"message":"264","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":20},{"ruleId":"260","severity":1,"message":"286","line":20,"column":13,"nodeType":"262","messageId":"263","endLine":20,"endColumn":24},{"ruleId":"275","severity":1,"message":"287","line":37,"column":8,"nodeType":"277","endLine":37,"endColumn":10,"suggestions":"288"},{"ruleId":"275","severity":1,"message":"279","line":49,"column":8,"nodeType":"277","endLine":49,"endColumn":47,"suggestions":"289"},{"ruleId":"275","severity":1,"message":"279","line":57,"column":8,"nodeType":"277","endLine":57,"endColumn":10,"suggestions":"290"},{"ruleId":"260","severity":1,"message":"291","line":8,"column":31,"nodeType":"262","messageId":"263","endLine":8,"endColumn":38},{"ruleId":"260","severity":1,"message":"292","line":18,"column":10,"nodeType":"262","messageId":"263","endLine":18,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":122,"column":24,"nodeType":"295","messageId":"296","endLine":122,"endColumn":26},{"ruleId":"297","severity":1,"message":"298","line":134,"column":31,"nodeType":"299","endLine":134,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":89,"column":38,"nodeType":"270","messageId":"271","endLine":89,"endColumn":40},{"ruleId":"268","severity":1,"message":"269","line":75,"column":38,"nodeType":"270","messageId":"271","endLine":75,"endColumn":40},{"ruleId":"275","severity":1,"message":"300","line":40,"column":73,"nodeType":"277","endLine":40,"endColumn":81,"suggestions":"301"},{"ruleId":"275","severity":1,"message":"300","line":46,"column":9,"nodeType":"277","endLine":46,"endColumn":31,"suggestions":"302"},{"ruleId":"268","severity":1,"message":"269","line":19,"column":28,"nodeType":"270","messageId":"271","endLine":19,"endColumn":30},{"ruleId":"260","severity":1,"message":"272","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"303","line":38,"column":8,"nodeType":"277","endLine":38,"endColumn":10,"suggestions":"304"},{"ruleId":"275","severity":1,"message":"305","line":47,"column":8,"nodeType":"277","endLine":47,"endColumn":14,"suggestions":"306"},{"ruleId":"260","severity":1,"message":"307","line":7,"column":20,"nodeType":"262","messageId":"263","endLine":7,"endColumn":31},{"ruleId":"268","severity":1,"message":"308","line":27,"column":49,"nodeType":"270","messageId":"309","endLine":27,"endColumn":51},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'setErrorInThunk' is defined but never used.","'errorsReducer' is defined but never used.","'setErrorActionCreator' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'ContactSupportOutlined' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["312"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["313"],["310"],["311"],"'Redirect' is defined but never used.",["310"],["311"],"'queryString' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'token'. Either include them or remove the dependency array.",["314"],["315"],["316"],"'getPage' is defined but never used.","'setErrors' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'deviceForm'. Either include it or remove the dependency array. You can also do a functional update 'setDeviceForm(d => ...)' if you only need 'deviceForm' in the 'setDeviceForm' call.",["317"],["318"],"React Hook useEffect has missing dependencies: 'dispatch', 'history.location.search', 'page', and 'setPage'. Either include them or remove the dependency array. If 'setPage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["319"],"React Hook useEffect has missing dependencies: 'history' and 'pathname'. Either include them or remove the dependency array.",["320"],"'GridColumns' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [dispatch, token, username]",{"range":"339","text":"340"},"Update the dependencies array to be: [username, token, page, paginationInfo, dispatch]",{"range":"341","text":"342"},"Update the dependencies array to be: [dispatch, id, token]",{"range":"343","text":"344"},"Update the dependencies array to be: [id, thingsPage, token, paginationInfo, dispatch]",{"range":"345","text":"346"},"Update the dependencies array to be: [dispatch]",{"range":"347","text":"348"},"Update the dependencies array to be: [deviceForm, states]",{"range":"349","text":"350"},"Update the dependencies array to be: [states, defaultState, deviceForm]",{"range":"351","text":"352"},"Update the dependencies array to be: [dispatch, history.location.search, page, setPage]",{"range":"353","text":"354"},"Update the dependencies array to be: [history, page, pathname]",{"range":"355","text":"356"},[1451,1453],"[dispatch, token, username]",[1889,1928],"[username, token, page, paginationInfo, dispatch]",[2062,2064],"[dispatch, id, token]",[2509,2548],"[id, thingsPage, token, paginationInfo, dispatch]",[2795,2797],"[dispatch]",[1595,1603],"[deviceForm, states]",[1919,1941],"[states, defaultState, deviceForm]",[1506,1508],"[dispatch, history.location.search, page, setPage]",[1741,1747],"[history, page, pathname]"]